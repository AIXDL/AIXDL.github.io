<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2021/07/23/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BD%91/%E7%AC%AC%E5%85%AD%E7%AB%A0%E5%BA%94%E7%94%A8%E5%B1%82/"/>
      <url>/2021/07/23/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BD%91/%E7%AC%AC%E5%85%AD%E7%AB%A0%E5%BA%94%E7%94%A8%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210723090018.png" alt="image-20210723090018404"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210723090320.png" alt="image-20210723090319864"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210723090421.png" alt="image-20210723090420969"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210723090757.png" alt="image-20210723090757202"></p><h1>DNS系统</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724085129.png" alt="image-20210724085129315"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724085609.png" alt="image-20210724085609064"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724092126.png" alt="image-20210724092126089"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724092356.png" alt="image-20210724092355961"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724092541.png" alt="image-20210724092541703"></p><h1>FTP</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724093238.png" alt="image-20210724093238343"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724093512.png" alt="image-20210724093512322"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724101101.png" alt="image-20210724101101120"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724101642.png" alt="image-20210724101641988"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724101700.png" alt="image-20210724101700590"></p><h1>电子邮件</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724101959.png" alt="image-20210724101959442"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724102557.png" alt="image-20210724102557348"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724102737.png" alt="image-20210724102737371"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724102927.png" alt="image-20210724102927151"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724103703.png" alt="image-20210724103703411"></p><p>每隔一段时间扫描发送方邮件服务器，</p><p>看是否有邮件，有的话就发送</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724103942.png" alt="image-20210724103942620"></p><p>支持多种数据类型的传输</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724104658.png" alt="image-20210724104658517"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724105356.png" alt="image-20210724105356646"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724105458.png" alt="image-20210724105458561"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724105539.png" alt="image-20210724105539260"></p><h1>万维网HTTP协议</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724105956.png" alt="image-20210724105955863"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724110539.png" alt="image-20210724110539620"></p><p>无状态的：第二次访问跟第一次访问的过程是一样的，并没有什么不同</p><p>Cookie可以记录历史访问记录<img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724111115.png" alt="image-20210724111115591"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724112354.png" alt="image-20210724112354463"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724112448.png" alt="image-20210724112448361"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724113027.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210724113310.png" alt="image-20210724113309834"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/07/22/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BD%91/%E7%AC%AC%E4%BA%94%E7%AB%A0%E4%BC%A0%E8%BE%93%E5%B1%82/"/>
      <url>/2021/07/22/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BD%91/%E7%AC%AC%E4%BA%94%E7%AB%A0%E4%BC%A0%E8%BE%93%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>传输层的功能</h1><p>提供进程与进程之间的逻辑通信</p><p>网络层提供主机与主机之间的逻辑通信</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722154518.png" alt="image-20210722154518031"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722154840.png" alt="image-20210722154840351"></p><p>端口号在本机内有唯一确认的一个就可以，没有规定进程通信必须要相同的端口号。</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722155550.png" alt="image-20210722155550332"></p><p>客户端的端口号，只有进程使用时才会使用该端口号。没有使用该进程时，就会释放该端口号，分配给其他进程。</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722155738.png" alt="image-20210722155738240"></p><h2 id="2-UDP协议">2.UDP协议</h2><p>udp协议是允许丢失一点数据的，对于实时性比较强的应用也是这样的</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722160500.png" alt="image-20210722160500425"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722160924.png" alt="image-20210722160924409"></p><p>校验数据没有出错的时候才会出现伪首部</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722162454.png" alt="image-20210722162453982"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722163551.png" alt="image-20210722163551524"></p><h1>TCP协议(虚连接)</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722164115.png" alt="image-20210722164115267"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722164253.png" alt="image-20210722164253080"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722164832.png" alt="image-20210722164832142"></p><p>确认号：4B</p><p>URG=1报文段就可以插队</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722170706.png" alt="image-20210722170706491"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722171127.png" alt="image-20210722171126834"></p><h1>TCP连接管理</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722172304.png" alt="image-20210722172304669"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722175911.png" alt="image-20210722175911509"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722180056.png" alt="image-20210722180056579"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722180612.png" alt="image-20210722180612497"></p><h1>TCP可靠传输</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722180922.png" alt="image-20210722180921917"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722182015.png" alt="image-20210722182015203"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722182302.png" alt="image-20210722182302226"></p><h1>TCP流量控制</h1><p>接收方根据发送方的流量动态的调整窗口</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722191236.png" alt="image-20210722191235938"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722192334.png" alt="image-20210722192334534"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722193117.png" alt="image-20210722193117397"></p><h1>TCP拥塞控制</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722210520.png" alt="image-20210722210520660"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722210438.png" alt="image-20210722210437770"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722211500.png" alt="image-20210722211459959"></p><p>快重传：连续收到3个重复的确认</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210722211747.png" alt="image-20210722211746889"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/07/17/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BD%91/%E7%AC%AC%E5%9B%9B%E7%AB%A0%E7%BD%91%E7%BB%9C%E5%B1%82/"/>
      <url>/2021/07/17/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BD%91/%E7%AC%AC%E5%9B%9B%E7%AB%A0%E7%BD%91%E7%BB%9C%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>网络层功能概述</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210717084715.png" alt="image-20210717084715577"></p><h4 id="主要任务：是将分组从源主机送到目的主机，为分组交换网上的不同主机提供通信服务，网络层的传输单位是数据报">主要任务：是将分组从源主机送到目的主机，为分组交换网上的不同主机提供通信服务，网络层的传输单位是数据报</h4><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210717085626.png" alt="image-20210717085626360"></p><p>解决网络拥塞的办法是</p><ol><li>开环控制    静态手法</li><li>闭环控制    动态手法</li></ol><h1>IP数据报格式</h1><p>IP数据报如果太长，会将它进行切割，也就成了分组。</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210717090147.png" alt="image-20210717090147190"></p><h2 id="ip数据报格式">ip数据报格式</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210717092646.png" alt="image-20210717092645864"></p><p>首部长度：首部长度4B，单位是4B。固定部分是20B，所以首部长度至少为5，最大为15也就是15*4=60B</p><h5 id="首部长度一定是4B的整数倍，如果长度不够则填充">首部长度一定是4B的整数倍，如果长度不够则填充</h5><p>区分服务：用来标识处理的优先级(很少用)</p><p>总长度：IP数据报的总长度，共16字节，那么最大长度为 2<sup>16</sup>-1=65535B(永远不会达到，因为会分片，成为分组)</p><p>生存时间(TTL):防止分组在路由器中兜圈子，所固定的在网络路由器中转发的存活时间</p><p>协议：<img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210717092247.png" alt="image-20210717092247294"></p><p>首部检验和：每过一个路由器都会检验</p><h1>IP数据报分片</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210717132939.png" alt="image-20210717132938860"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210717133700.png" alt="image-20210717133659795"></p><p>讨论MF=0或者MF=1的前提是DF=0(允许分片)</p><p>片偏移：能够按顺序组合分组，知道分组的先后顺序。</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210717144548.png" alt="image-20210717144548491"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210717144723.png" alt="image-20210717144722895"></p><h1>IP地址(可以唯一标识主机和路由器的某个接口)</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210717230316.png" alt="image-20210717230315673"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210717231343.png" alt="image-20210717231343789"></p><p>网桥不能分割广播域</p><p>同一个网络中，网络号要一样，主机号不一样。</p><p>不同的网络号，对应着不同的广播域。</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210717233020.png" alt="image-20210717233020279"></p><p>IP地址的分类是为了合理分配资源。</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210718080853.png" alt="image-20210718080845147"></p><p>网络号全0，表示本网络内</p><p>路由器隔离广播域，它是不会转发广播分组的</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210718081015.png" alt="image-20210718081015546"></p><p>用于内网的ip地址，这些地址如果在网络上它是不会被转发的。</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210718082501.png" alt="image-20210718082501610"></p><p>主机号全0，全1不能用，网络号全0不能用</p><h1>NAT地址转换(在路由器上安装NAT软件)</h1><h4 id="用途：在局域网中的主机能过访问因特网">用途：在局域网中的主机能过访问因特网</h4><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210718084853.png" alt="image-20210718084853283"></p><p>假设A要向外发送数据，那么A的数据报=源地址(内网地址)+目的地址(接收方NAT路由器地址)+端口(本主机的端口)，当数据报经过NAT路由器的时候，A的数据报会发生变化=源地址(NAT路由器某端口IP地址)+目的地址(接收方NAT路由器地址)+端口(映射后的地址)。</p><p>当送到B所在的NAT路由器之后，数据报=源地址(A的NAT路由器)+目的地址(根据转换表换成B之后的地址)+端口号(经过映射之后的地址)</p><h4 id="NAT地址转换表-内网IP-端口-外网IP-端口-根据端口号确定对应的内网IP和端口号">NAT地址转换表(内网IP:端口=外网IP:端口)根据端口号确定对应的内网IP和端口号</h4><h1>子网划分和子网掩码</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210718090147.png" alt="image-20210718090147398"></p><h2 id="子网划分">子网划分</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210718090501.png" alt="image-20210718090501709"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210718091744.png" alt="image-20210718091744042"></p><p>路由器如何精确定位到局域网中的某台主机呢?</p><p>答:子网掩码</p><p>子网掩码:能够确定要向那个子网中的那个主机转发主机。</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210718092205.png" alt="image-20210718092205669"></p><h2 id="子网掩码习题">子网掩码习题</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210718092254.png" alt="image-20210718092254105"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210718093500.png" alt="image-20210718093459975"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210718101734.png" alt="image-20210718101734131"></p><p>直接交付：可以直接转发给子网中的主机</p><p>间接交付:在这个子网中，找不到目的主机，需要转发给下一目的主机</p><p>怎么判断能否直接交付？</p><p>答：将局域网中的目的IP分别和子网掩码进行与操作，结果和子网相同的就是，目的子网。</p><h1>无分类编制(CIDR):普遍使用的编址形式</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210718102050.png" alt="image-20210718102050489"></p><p>主机号全零表示地址块。</p><p>网络前缀有几位，地址掩码全为1</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210718142649.png" alt="image-20210718142649531"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210718151456.png" alt="image-20210718151456698"></p><p>前16位相同，取17位到21位相同的部分001所以最后的结果是16+3=19的网络前缀，主机号全为0</p><h2 id="构成超网-聚合多个子网">构成超网(聚合多个子网)</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210718143633.png" alt="image-20210718143633656"></p><h1>最长前缀匹配</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210718151118.png" alt="image-20210718151118862"></p><p><a href="http://xxx.xxx.xxx.xxx/n%E5%B0%86%E7%9B%AE%E7%9A%84%E5%9C%B0%E5%9D%80%E7%9A%84%E5%89%8Dn%E4%B8%BA1%E5%92%8Cyyy.yyy.yyy.yyy.%E7%9B%B8%E4%B8%8E%E3%80%82%E5%BE%97%E5%87%BA%E7%9A%84%E7%BB%93%E8%AE%BA%E5%A6%82%E6%9E%9C%E5%92%8Cxxx.xxx.xxx.xxx%E7%9B%B8%E5%90%8C%E5%B0%B1%E9%80%89%E6%9C%80%E9%95%BF%E7%9B%B8%E5%90%8C%E7%9A%84%E9%82%A3%E4%B8%AA">xxx.xxx.xxx.xxx/n将目的地址的前n为1和yyy.yyy.yyy.yyy.相与。得出的结论如果和xxx.xxx.xxx.xxx相同就选最长相同的那个</a></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210718152151.png" alt="image-20210718152151484"></p><p>默认路由：当地址和路由表中所有的地址不匹配时就会将其发送到默认路由中，也就是下一个路由</p><h1>ARP协议</h1><p>如果ARP表中没有目的主机的mac地址，则广播ARP的分组请求</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210719220333.png" alt="image-20210719220333098"></p><p>路由器可以有多个ip地址和mac地址，和端口对应上。</p><p>交换机没有mac地址</p><p>发送数据前，源主机会将子网掩码和目的地址进行与操作，看是否目的主机在同一网段内，如果不是，则数据帧目的mac是默认网关的。同时发送数据给默认网关(路由器)</p><p>源主机如何获取默认网关的mac地址呢?</p><p>答：源主机数据报中的ip地址为默认网关的ip地址。同时广播出去，当默认网关接收到该分组时。就会返回一个响应分组，告诉源主机，默认网关的mac地址</p><p>在数据的发送过程中，源ip地址和目的ip地址是不变的，而每次经过一个结点，都需要改变源mac地址和目的mac地址。</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210719222716.png" alt="image-20210719222716457"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210719223206.png" alt="image-20210719223205958"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210719223502.png" alt="image-20210719223502704"></p><h1>DHCP协议</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210719223743.png" alt="image-20210719223743054"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210719224417.png" alt="image-20210719224417319"></p><p>DHCP允许地址重用：DHCP会有一个IP地址池，里面可以存放回收回来的ip地址，ip地址同时有时间限制，过期了就会回收，重新分配一个。但可以续租原来的ip地址</p><p>2.如果一个设备向dhcp服务器广播了报文，可能存在多个服务器进行响应，那么那个dhcp的配置信息先达到就使用哪一个。</p><p>3.主机在确定使用一个dhcp的ip地址后，会进行广播，告诉dhcp服务器我使用你的ip地址，告诉其他dhcp服务器我已经使用某个ip，你们就不用等待了，将ip分配给其他人</p><h1>ICMP协议(为了更有效的转发IP数据报和提高交付成功的机会)</h1><p>ICMP报文=差错报文+询问报文</p><p>分组出错，网络层直接丢弃，然后发送一个ICMP差错报文</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720084712.png" alt="image-20210720084711910"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720085032.png" alt="image-20210720085031914"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720085252.png" alt="image-20210720085252558"></p><p>ICMP差错报告报文是ip数据报的数据部分，需要封装在ip数据报之中</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720085631.png" alt="image-20210720085630979"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720085930.png" alt="image-20210720085930110"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720090525.png" alt="image-20210720090525444"></p><p>Traceroute：发送一连串TTL依次增加的数据报。每个数据报达到最终的路由器的时候因为TTL=0，而被路由器丢弃掉。同时返回一个ICMP差错报告报文。最终就可以测算出两主机之间的距离</p><h1>IPV6</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720091122.png" alt="image-20210720091122238"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720091337.png" alt="image-20210720091337450"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720094021.png" alt="image-20210720094021443"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720094520.png" alt="image-20210720094520751"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720094805.png" alt="image-20210720094805275"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720095403.png" alt="image-20210720095403574"></p><p>多播、任播只能做目的地址</p><p>任播：只会发送给离他最近的主机</p><h2 id="兼容ipv4和ipv6">兼容ipv4和ipv6</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720095816.png" alt="image-20210720095816149"></p><p>隧道技术：当发送给ipv4的时候，将整体当成数据部分，在前面添加ipv4首部。当发送给ipv6时就将添加的ipv4去掉前面的首部</p><h1>思维导图</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720100224.png" alt="image-20210720100224300"></p><h1>路由算法及路由协议</h1><p>路由算法：将最佳路径的路由添加到路由表中</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720102454.png" alt="image-20210720102454439"></p><h2 id=""></h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720103217.png" alt="image-20210720103217236"></p><p>拓扑变化不大：不会有大量设备突然加入网路，或者突然撤出网路</p><p>静态路由算法不适合大型网路，毕竟靠人工不现实</p><p>链路费用：路径代价，即这个链路上有几个路由器</p><h2 id="分层次的路由选择协议">分层次的路由选择协议</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720103909.png" alt="image-20210720103909758"></p><p>因特网被分割为多个自治系统AS，AS对外界是透明的</p><p>自制系统内部使用一些协议，外部使用一些协议。</p><h1>RIP协议和距离向量算法</h1><h4 id="RIP适用于比较大型的网络，RIP适用于比较小型的网络">RIP适用于比较大型的网络，RIP适用于比较小型的网络</h4><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720104521.png" alt="image-20210720104521453"></p><p>RIP是分布式的基于距离向量的路由选择协议，是英特网的协议标准，最大优点是简单。</p><p>RIP要求网络中每个路由器都维护自己到附近网络的最佳路径</p><p>跳数：源端口到目的端口经过的路由器个数，经过一个路由器跳数+1。最多1经过5个路由器。16个表示网络不可达</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720104900.png" alt="image-20210720104900689"></p><p><strong>路由表是如何建立的呢？</strong></p><p>通过与相连的路由器交换路由表信息</p><p>每过30秒交换一次路由信息，超过3分钟，就会判断邻居路由出问题了，把自己路由表中有关邻居路由的信息更新，距离设置为16，表示网络不可达</p><p>路由表一开始的时候，只有直接相连的网络的信息，跳数为1，直接交付。</p><p>路由器交换路由表的信息其实是交换RIP的报文</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720111137.png" alt="image-20210720110601634"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720111116.png" alt="image-20210720111116010"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720111652.png" alt="image-20210720111652746"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720111850.png" alt="image-20210720111849985"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720112232.png" alt="image-20210720112232263"></p><p>与R1相连的网1出现了故障，但此时收到R2的信息，发现它可以到网络1，所以就一直循环。直到16跳(坏消息传的慢)</p><h1>思维导图</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720112635.png" alt="image-20210720112635631"></p><h1>OSPF协议与链路状态算法</h1><p>OSPF协议：路由器向相邻的路由器都发送信息，而这些路由器又再次将此信息发送给相邻的信息(一传十十传百)</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720113349.png" alt="image-20210720113349752"></p><p>最后每个路由器都知道到这个网络内所有路由器的最短路径</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720113913.png" alt="image-20210720113913135"></p><p>把所有路径信息先存入数据库，然后在根据迪杰斯特拉算法得出最短路径</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720114209.png" alt="image-20210720114209042"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720114331.png" alt="image-20210720114331210"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720142446.png" alt="image-20210720114535056"></p><h2 id="BGP协议">BGP协议</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720142520.png" alt="image-20210720142519861"></p><p>BGP发言人一般就是边界路由器</p><p>自制系统连通图</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720142955.png" alt="image-20210720142955319"></p><h4 id="BGP借用TCP传输">BGP借用TCP传输</h4><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720143531.png" alt="image-20210720143531631"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720143847.png" alt="image-20210720143653888"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720143838.png" alt="image-20210720143812033"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720144257.png" alt="image-20210720144257345"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720144523.png" alt="image-20210720144523335"></p><h1>ip组播</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720145057.png" alt="image-20210720145057043"></p><p>组播：只会向有实际需求的主机发送数据</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720153727.png" alt="image-20210720153726955"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720150149.png" alt="image-20210720150148984"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720155542.png" alt="image-20210720155542035"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720155855.png" alt="image-20210720155855512"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720160223.png" alt="image-20210720160223218"></p><p>主播组的成员是可以动态变化的</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720162342.png" alt="image-20210720160450287"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720160601.png" alt="image-20210720160601641"></p><h1>移动IP(设备移动，IP不变)</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720161121.png" alt="image-20210720161121171"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720161705.png" alt="image-20210720161705643"></p><h1>路由器</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720162050.png" alt="image-20210720162049833"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720162412.png" alt="image-20210720162412053"></p><h2 id="三层设备-物理层，链路层，网络层">三层设备(物理层，链路层，网络层)</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720162727.png" alt="image-20210720162727298"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210720162952.png" alt="image-20210720162952529"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第三章数据链路层</title>
      <link href="/2021/07/08/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BD%91/%E7%AC%AC%E4%B8%89%E7%AB%A0%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/"/>
      <url>/2021/07/08/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BD%91/%E7%AC%AC%E4%B8%89%E7%AB%A0%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>1.数据链路层功能概述</h1><h2 id="主要职责：向相邻的结点传输数据报">主要职责：向相邻的结点传输数据报</h2><h2 id="基本概念">基本概念</h2><ul><li><h3 id="结点：主机、路由器">结点：主机、路由器</h3></li><li><h3 id="链路：两个结点之间的物理通道，链路的传输介质主要有双绞线、光纤、微波。分为有线链路、无限链路">链路：两个结点之间的物理通道，链路的传输介质主要有双绞线、光纤、微波。分为有线链路、无限链路</h3></li><li><h3 id="数据链路-两个结点之间的逻辑通道，把实现协议的硬件和软件加到链路中就是数据链路">数据链路:两个结点之间的逻辑通道，把实现协议的硬件和软件加到链路中就是数据链路</h3></li><li><h3 id="链路层的数据单元，封装网络层数据报">链路层的数据单元，封装网络层数据报</h3></li></ul><h2 id="功能">功能</h2><ul><li><h3 id="为网络层提供服务">为网络层提供服务</h3><ul><li>无确认无连接服务<ul><li>不需要事先建立连接</li><li>收到数据不需要确认帧</li></ul></li><li>有确认无连接服务<ul><li>不需要事先建立连接</li><li>收到数据需要确认帧</li></ul></li><li>有确认面向连接服务<ul><li>需要事先建立连接</li><li>收到数据需要确认帧</li></ul></li></ul></li><li><h3 id="链路管理即连接的建立、维持、释放-用于面向连接的服务">链路管理即连接的建立、维持、释放(用于面向连接的服务)</h3></li><li><h3 id="组帧">组帧</h3></li><li><h3 id="流量控制">流量控制</h3></li><li><h3 id="差错控制-帧错-位错">差错控制(帧错/位错)</h3></li></ul><h4 id="注释">注释</h4><h4 id="确认帧：源主机需要收到确认帧之后，才能继续发送下一个">确认帧：源主机需要收到确认帧之后，才能继续发送下一个</h4><h1>2.封装成帧透明传输</h1><h1>帧=IP数据报+帧首部+帧尾部</h1><h4 id="帧首部和帧尾部的一个重要作用是帧定界-确定帧的边界">帧首部和帧尾部的一个重要作用是帧定界(确定帧的边界)</h4><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708182223.png" alt="image-20210708182216417"></p><h2 id="帧同步：接收方能确定帧的起始和结束">帧同步：接收方能确定帧的起始和结束</h2><p><strong>注释</strong></p><p>为了提供数据传输效率，帧的数据部分应该尽可能大于帧首部和帧尾部</p><h2 id="MTU-最大传输长度-帧的数据部分应该要小于这个值">MTU(最大传输长度):帧的数据部分应该要小于这个值</h2><h2 id="组帧的四种方法">组帧的四种方法</h2><ul><li><h4 id="字符计数法">字符计数法</h4><ul><li><p>帧首部用一个字节来标明帧内的字符数</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708183427.png" alt="image-20210708183426968"></p></li><li><h4 id="缺点：一单一个有错误比如说上图的第1帧的5变为4，那么就会产生连锁反应，全部错掉了">缺点：一单一个有错误比如说上图的第1帧的5变为4，那么就会产生连锁反应，全部错掉了</h4></li><li><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708183911.png" alt="image-20210708183911574"></p></li><li><h4 id="SOH帧开始的标记，EOT帧结束的标记-SOH、EOT都是一个字节">SOH帧开始的标记，EOT帧结束的标记(SOH、EOT都是一个字节)</h4></li><li><h4 id="当传输的是文本文件-ASCII-的时候就什么内容都可以传输">当传输的是文本文件(ASCII)的时候就什么内容都可以传输</h4></li></ul></li><li><h4 id="字符-节-填充法">字符(节)填充法</h4></li><li><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708184329.png" alt="image-20210708184329272"></p></li><li><p>利用字符填充法可以避免这种情况(数据部分出现帧结束符)</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708184642.png" alt="image-20210708184641924"></p></li><li><p>发送的时候在特殊字符例如EOT、SOH、ESC等字符前添加一个转义字符ESC。表示ESC后面的是数据</p></li><li><p>接收的时候去掉转义字符ESC(一个字节)</p></li><li><h4 id="零比特填充法">零比特填充法</h4></li><li><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708185258.png" alt="image-20210708185258124"></p></li><li><h4 id="步骤">步骤</h4><ul><li><strong>发送</strong>:扫描整个信息段遇到连续的5个1就添加一个0</li><li><strong>接收</strong>：先找出帧定界符，再逐个扫描遇到连续5个1删除后面的0</li></ul></li><li><h4 id="违规编码法">违规编码法</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708190241.png" alt=""></li></ul></li></ul><h2 id="特点">特点</h2><ul><li><h4 id="保证了透明传输：在比特流中可以发送任意的比特组合，而不会引起对帧边界的错误判断">保证了透明传输：在比特流中可以发送任意的比特组合，而不会引起对帧边界的错误判断</h4></li></ul><h1></h1><h1>透明传输:看不见传输的内容</h1><h1>3.差错空制(检错编码)</h1><h3 id="传输中的差错是由噪声引起的">传输中的差错是由噪声引起的</h3><h3 id="噪声">噪声</h3><ul><li><h3 id="全局性">全局性</h3><ul><li><h4 id="物理设备引起的，是不可避免的">物理设备引起的，是不可避免的</h4></li><li><h4 id="解决办法：">解决办法：</h4><ul><li><h5 id="提高信噪比">-提高信噪比</h5></li><li><h5 id="减少干扰">减少干扰</h5></li></ul></li></ul></li><li><h3 id="局部性">局部性</h3><ul><li><h5 id="是产生差错的主要原因">是产生差错的主要原因</h5></li><li><h5 id="产生原因：外界特定的短暂原因所造成的冲击噪声">产生原因：外界特定的短暂原因所造成的冲击噪声</h5></li><li><h5 id="解决方法：常利用编码技术">解决方法：常利用编码技术</h5></li></ul></li></ul><h2 id="差错">差错</h2><ul><li><h3 id="位错-比特位错误">位错(比特位错误)</h3></li><li><h3 id="帧错-以帧为单位">帧错(以帧为单位)</h3><ul><li><h4 id="丢失">丢失</h4></li><li><h4 id="重复">重复</h4></li><li><h4 id="失序">失序</h4></li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708200557.png" alt="image-20210708200557766"></p><h3 id="数据链路层的差错控制：可以在任一结点的数据链路层发送">数据链路层的差错控制：可以在任一结点的数据链路层发送</h3><h2 id="差错控制-比特错">差错控制(比特错)</h2><ul><li><h3 id="检错编码">检错编码</h3><ul><li><h4 id="奇偶校验码">奇偶校验码</h4></li><li><h4 id="循环冗余码-CRC">循环冗余码(CRC)</h4></li></ul></li><li><h3 id="纠错编码">纠错编码</h3><ul><li><h4 id="海明码">海明码</h4></li></ul></li></ul><h3 id="注释：数据链路层的编码和物理层的编码是不一样的物理层是单个比特，数据链路层是一组比特">注释：数据链路层的编码和物理层的编码是不一样的物理层是单个比特，数据链路层是一组比特</h3><h3 id="冗余编码-存在几个冗余位，为了与数据位构成一定的规律和满足某些规则，方便检错">冗余编码:存在几个冗余位，为了与数据位构成一定的规律和满足某些规则，方便检错</h3><h2 id="奇偶校验">奇偶校验</h2><ul><li><h3 id="奇校验-最高位添加一个校验位使得1的个数位奇数个">奇校验:最高位添加一个校验位使得1的个数位奇数个</h3></li><li><h3 id="偶校验-最高位添加一个校验位使得1的个数位偶数个">偶校验:最高位添加一个校验位使得1的个数位偶数个</h3></li><li><h3 id="特点：只能检验出奇数个错误，检验能力位50-2个1变为0，采用是检验不出来的">特点：只能检验出奇数个错误，检验能力位50%(2个1变为0，采用是检验不出来的)</h3></li></ul><h2 id="CRC循环冗余码">CRC循环冗余码</h2><h3 id="步骤-2">步骤</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708203501.png" alt="image-20210708203501235"></p><h3 id="接收端">接收端</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708204606.png" alt="image-20210708204606095"></p><h2 id="CRC计算例题">CRC计算例题</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708204857.png" alt="image-20210708204857170"></p><h4 id="如果数据链路层使用了CRC校验，那么只要接收了，那么我们默认是接近于1的概率认为这个帧是正确的，没有产生差错">如果数据链路层使用了CRC校验，那么只要接收了，那么我们默认是接近于1的概率认为这个帧是正确的，没有产生差错</h4><h2 id="可靠传输：数据链路层发送什么就接收什么">可靠传输：数据链路层发送什么就接收什么</h2><h3 id="CRC虽然是无比特差错传输，但不是可靠传输，因为存在着一些帧被丢弃。">CRC虽然是无比特差错传输，但不是可靠传输，因为存在着一些帧被丢弃。</h3><h2 id="海明码-2">海明码</h2><h3 id="工作流程">工作流程</h3><ul><li><h4 id="确定校验码的位数">确定校验码的位数</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708213852.png" alt="image-20210708213852376"></li></ul></li><li><h4 id="确定校验码和数据的位置">确定校验码和数据的位置</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708214034.png" alt="image-20210708214034106"></li></ul></li><li><h4 id="求出校验码的值">求出校验码的值</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708214612.png" alt="image-20210708214612045"></li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708215245.png" alt="image-20210708215245275"></li><li>然后将(5,6,7)位对应的值进行异或，结果就是X4的值</li><li>然后将(3,6,7)位对应的值进行异或，结果就是X2的值</li><li>然后将(3,5,7)位对应的值进行异或，结果就是X1的值</li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708215542.png" alt="image-20210708215541932"></li></ul></li><li><h4 id="检错并纠错">检错并纠错</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708220442.png" alt="image-20210708220442348"></li><li>进行异或</li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708220525.png" alt="image-20210708220525070"></li></ul></li></ul><h3 id="码距-海明距离">码距(海明距离)</h3><h3 id="两个编码的码距">两个编码的码距</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708211838.png" alt="image-20210708211838006"></p><p>两个编码的码距，对应位不同值得个数</p><p>从上图我们可以看出：只有第一位不同，所以码距位1</p><h3 id="多个编码的码距">多个编码的码距</h3><p>任意两个编码的码距的最小值，就是这个编码集合的码距</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708212822.png" alt="image-20210708212822436"></p><p>码距位1发现不了错误：发生错误后的数据在原来的集合中已经存在。这样就不能确定是否发生错误</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708213015.png" alt="image-20210708213015456"></p><p>码距为2可以发现一位错:因为一位错在集合中没有，每个都至少2位不同。</p><h3 id="码距和检错纠错之间的关系">码距和检错纠错之间的关系</h3><ul><li>检出n位错，码距为n+1</li><li>纠n位错，码距为2n+1</li></ul><h3 id="总结">总结</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210708220613.png" alt="image-20210708220613420"></p><h1>4.流量控制和可靠传输机制</h1><h3 id="数据链路层的流量控制是点对点，传输层的流量控制是端到端。">数据链路层的流量控制是点对点，传输层的流量控制是端到端。</h3><h3 id=""></h3><h3 id="数据链路层流量控制手段-接收方收不下就不回复确认帧">数据链路层流量控制手段:接收方收不下就不回复确认帧</h3><h3 id="传输层流量控制手段：接收端给发送端发送一个窗口公告">传输层流量控制手段：接收端给发送端发送一个窗口公告</h3><h2 id="流量控制协议">流量控制协议</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709094258.png" alt="image-20210709094258579"></p><ul><li><h3 id="停止—等待协议">停止—等待协议</h3><ul><li><h4 id="每发一个帧，需要收到确认帧之后才能发送下一帧">每发一个帧，需要收到确认帧之后才能发送下一帧</h4></li></ul></li><li><h3 id="滑动窗口协议">滑动窗口协议</h3><ul><li><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709094822.png" alt="image-20210709094057377"></p></li><li><p>没有收到确认帧就一直不动，知道收到确认帧，窗口才向后移动</p></li><li><p>前一个确认帧没收到是不能接收下一个确认帧的，必须按顺序</p></li><li><h4 id="后退N帧协议-GBN">后退N帧协议(GBN)</h4></li><li><h4 id="选择重传协议-SR">选择重传协议(SR)</h4></li></ul></li></ul><h2 id="在数据链路层发送窗口和接收窗口的大小是固定的">在数据链路层发送窗口和接收窗口的大小是固定的</h2><h3 id="滑动窗口解决">滑动窗口解决</h3><ul><li><h4 id="可靠传输-发送方自动重传-超出时限没收到确认帧，则重传">可靠传输(发送方自动重传:超出时限没收到确认帧，则重传)</h4></li><li><h4 id="流量控制-2">流量控制</h4></li></ul><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709095126.png" alt="image-20210709095126464"></p><h1>5.停止-等待协议</h1><h2 id="为什么需要停止等待协议">为什么需要停止等待协议</h2><ul><li>除了比特出差错还有丢包问题</li><li>为了实现流量控制</li></ul><h2 id="每发送一个帧就需要收到一个确认帧，才能继续发送帧">每发送一个帧就需要收到一个确认帧，才能继续发送帧</h2><h2 id="应用情况">应用情况</h2><ul><li><h4 id="无差错">无差错</h4><ul><li><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709100121.png" alt="image-20210709100120939"></p></li><li><h5 id="ACK-确认帧-0-对于0号帧的确认">ACK(确认帧)0(对于0号帧的确认)</h5></li><li><h5 id="0帧只是一个编号，可重复">0帧只是一个编号，可重复</h5></li></ul></li><li><h4 id="有差错">有差错</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709102432.png" alt="image-20210709102432172"></li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709103038.png" alt="image-20210709103038368"></li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709103357.png" alt="image-20210709103357670"></li><li>如果第一次确认帧在第二次确认帧之前收到，那么就会发送下一帧。当收到对于重传的确认帧之后，就收下丢弃</li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709103632.png" alt="image-20210709103631997"></li></ul></li></ul><p><strong>Q1</strong>为什么超时计时器要比RTT更长一些？</p><p><strong>A</strong>：存在着接收方处理时延</p><h2 id="停止等待协议的性能分析：信道利用率太低">停止等待协议的性能分析：信道利用率太低</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709104112.png" alt="image-20210709104112140"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709104339.png" alt="image-20210709104339405"></p><h2 id="思维导图">思维导图</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709104522.png" alt="image-20210709104522899"></p><h1>6.GBN后退N帧协议</h1><h2 id="流水线技术">流水线技术</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709105015.png" alt="image-20210709105015062"></p><p><strong>注释</strong></p><p>发完一个帧继续发直到满足限制大小</p><h3 id="后退N帧协议里的滑动窗口">后退N帧协议里的滑动窗口</h3><h4 id="发送窗口：在这窗口里的帧才能被发送大小为n">发送窗口：在这窗口里的帧才能被发送大小为n</h4><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709105351.png" alt="image-20210709105351072"></p><h4 id="接收窗口大小为1">接收窗口大小为1</h4><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709105413.png" alt="image-20210709105412946"></p><h2 id="过程">过程</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709105834.png" alt="image-20210709105834262"></p><p>有一种方案：不用没收到一个就发送一个确认帧，可以累积确认，必如说，当接收方收到3帧的时候就发送一个确认帧，告诉发送方，前面3帧已经正确接受了</p><h2 id="GBN发送方必须相应的三件事">GBN发送方必须相应的三件事</h2><ul><li><h3 id="上层的调用">上层的调用</h3><ul><li>上层要发送数据时，先检查是否有空闲的发送窗口，如果有则发送，如果没有则缓存起来，等待，知道数据链路层将它发送。如果缓存已满，则返回给上层，告诉它等下再送过来</li></ul></li><li><h3 id="收到一个ack">收到一个ack</h3><ul><li>GBN协议中采用累计确认的方式，即固定时间间隔发送确认帧，表明已经收到n号帧即它之前的所有帧</li></ul></li><li><h3 id="超时事件">超时事件</h3><ul><li>虽然发送方可以在发送完一个帧之后继续发送，但是接收方只会按顺序接收，如果中间有个帧没接收到，那么接收方就不会接收丢失帧的后续帧。直到时间超过计时器，发送方会重新从最后确认帧的后一个帧开始发送</li></ul></li></ul><h2 id="GBN接收方要做的三件事">GBN接收方要做的三件事</h2><ul><li>如果正确接收到n号帧，且n号帧以前的帧都接收了(接收方知道帧的接收顺序)。那么就会发送对n帧及以前的帧的一个确认帧，并把帧的数据部分传输给上层</li><li>按顺序接收帧，并且定时发送对已接收及其之前的帧的确认帧</li></ul><h3 id="滑动窗口长度不是无限的">滑动窗口长度不是无限的</h3><p>滑动窗口的长度应w满足1&lt;=w&lt;=2<sup>n</sup>-1。英文发送方尺寸过大，就会使得接收方无法区别新帧和旧帧(因为帧编号可以重复使用)</p><h2 id="GBN协议重点总结">GBN协议重点总结</h2><ul><li><h4 id="累积确认">累积确认</h4></li><li><h4 id="接收方接收帧，不按序则丢弃">接收方接收帧，不按序则丢弃</h4></li><li><h4 id="确认序列号最大的、按序到达的帧。">确认序列号最大的、按序到达的帧。</h4></li><li><h4 id="发送窗口最大为2-sup-n-sup-1-接收窗口最大为1">发送窗口最大为2<sup>n</sup>-1,接收窗口最大为1</h4></li></ul><h2 id="题目">题目</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709155420.png" alt="image-20210709155420547"></p><p>答案选C</p><h1>7.选择重传协议SR</h1><h3 id="选择重传协议里的滑动窗口">选择重传协议里的滑动窗口</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709161612.png" alt="image-20210709161612130"></p><h3 id="SR发送方必须相应的三件事">SR发送方必须相应的三件事</h3><ul><li><h5 id="上层的调用-2">上层的调用</h5><ul><li>上层要发送数据时，先检查是否有空闲的发送窗口，如果有则发送，如果没有则缓存起来，等待，知道数据链路层将它发送。如果缓存已满，则返回给上层，告诉它等下再送过来</li></ul></li><li><h5 id="收到一个ACK">收到一个ACK</h5><ul><li>如果帧不是最小下界处(最左边对应的序号处)，则仅仅做一个标记表明这个帧已经被确认。如果是最小下界处的确认则移动窗口到最小未确认的窗口出处</li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709165339.png" alt="image-20210709165339158"></li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709165356.png" alt="image-20210709165356125"></li></ul></li><li><h5 id="超时事件-2">超时事件</h5><ul><li>每个帧都有自己的定时器，一个超时事件发送后只重传一个帧</li></ul></li></ul><h3 id="SR接收方要做的事">SR接收方要做的事</h3><ul><li>接收窗口内的所有帧，即使不按顺序达到也没关系。如果失序的帧，则接收并缓存，并发送确认帧。直到所有帧(从小到大)都被接收，才把他们排序并交付给上层。同时移动窗口<ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709170135.png" alt="image-20210709170135787"></li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709170202.png" alt="image-20210709170202350"></li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709170221.png" alt="image-20210709170221180"></li></ul></li></ul><h2 id="运行中的SR">运行中的SR</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709170842.png" alt="image-20210709170841998"></p><h3 id="重传的二义性：接收方无法区分，收到的是重传的还是新帧-因为序号可以重复使用">重传的二义性：接收方无法区分，收到的是重传的还是新帧(因为序号可以重复使用)</h3><h3 id="滑动窗口长度-W-sub-发送方最大长度-sub-W-sub-接收方最大长度-sub-2-sup-n-1-sup">滑动窗口长度:W<sub>发送方最大长度</sub>=W<sub>接收方最大长度</sub>=2<sup>(n-1)</sup></h3><p><strong>注释</strong></p><p>发送方和接收方的窗口大小最好是相等(大了会溢出，小了没意义)</p><h2 id="SR协议总结">SR协议总结</h2><ul><li><h3 id="在接收窗口内收到一个帧，确认一个帧">在接收窗口内收到一个帧，确认一个帧</h3></li><li><h3 id="只重传出错帧">只重传出错帧</h3></li><li><h3 id="接收方有">接收方有</h3></li><li><h3 id="W-sub-发送方最大长度-sub-W-sub-接收方最大长度-sub-2-sup-n-1-sup">W<sub>发送方最大长度</sub>=W<sub>接收方最大长度</sub>=2<sup>(n-1)</sup></h3></li></ul><h2 id="习题">习题</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709172929.png" alt="image-20210709172929505"></p><h2 id="思维导图-2">思维导图</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709173002.png" alt="image-20210709173002569"></p><h1>8.信道划分介质访问控制</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709185616.png" alt="image-20210709185615441"></p><h3 id="介质访问控制的内容：采取一定的措施，使得两结点通信不会相互干扰">介质访问控制的内容：采取一定的措施，使得两结点通信不会相互干扰</h3><h2 id="介质访问控制-广播信道中">介质访问控制(广播信道中)</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210709185940.png" alt="image-20210709185940512"></p><ul><li><h3 id="静态划分信道–信道划分介质访问控制">静态划分信道–信道划分介质访问控制</h3><ul><li><h4 id="频分多路复用FDM">频分多路复用FDM</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210710134010.png" alt="image-20210710134009923"></li><li>用户分的频带后，在通信过程中都占用这个频带。其他 用户在同样的时间占用不同的带宽。(频带宽度)</li><li><strong>特点</strong>:<ul><li>充分利用传输介质带宽，系统效率高。实现容易</li></ul></li></ul></li><li><h4 id="时分多路复用TDM">时分多路复用TDM</h4><ul><li><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210710134542.png" alt="image-20210710134542417"></p></li><li><p>它是将一个周期时间划分成n片段，每个任务占用其中的某一片段。只有当时间再那个片段的时候，对应的任务才会被执行，其他时间再等待</p></li><li><h3 id="改进版–统计时分复用-STDM">改进版–统计时分复用(STDM)</h3><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210710135241.png" alt="image-20210710135241543"></li><li>将多个发送任务先送入到集中器中缓存起来，然后按照先后顺序，动态的划分帧，将数据发送</li></ul></li></ul></li><li><h4 id="波分多路复用WDM">波分多路复用WDM</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210710135835.png" alt="image-20210710135835173"></li><li>在光纤中传输多种不同波长(频率的光信号)，波长不同，他们不会互相干扰。最后用波长分解复用器将各个波长分解出来</li></ul></li><li><h4 id="码分多路复用CDM">码分多路复用CDM</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210710140505.png" alt="image-20210710140505058"></li><li>现在多数采用<strong>码分多址</strong>(CDMA)将接收端不同主机发送的数据给分离出来</li></ul></li></ul></li><li><h3 id="动态分配信号-不是固定分配给用户的">动态分配信号(不是固定分配给用户的)</h3><ul><li><h4 id="轮询访问介质访问控制">轮询访问介质访问控制</h4><ul><li><h5 id="令牌传递协议">令牌传递协议</h5></li></ul></li><li><h4 id="随机访问介质访问控制">随机访问介质访问控制</h4><ul><li><h5 id="ALOHA协议">ALOHA协议</h5><ul><li><h5 id="纯ALOHA协议">纯ALOHA<strong>协议</strong></h5><ul><li>不监听信道</li><li>想发就发</li><li>随机重发</li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210710221426.png" alt="image-20210710221425821"></li><li>如果发送冲突，接收方就会检测出差错，然后不予确认，发送方在一定时间内收不到确认信息，就可以判断发送冲突</li></ul></li><li><h5 id="时隙ALOHA协议">时隙ALOHA协议</h5><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210710222319.png" alt="image-20210710222319371"></li><li>把一个周期时间分成若干个相同的时间片，所有用户在时间片开始时刻接入网络信道，若冲突，则等到下一个时间片开始时再发送</li></ul></li><li><p>纯ALOHA比时隙比时隙ALOHA吞吐量更低，效率更低</p></li><li><p>纯ALOHA是想法就发，时隙ALOHA只有在时间片开始的时候才能发</p></li></ul></li><li><h5 id="CSMA协议-载波监听多路访问协议">CSMA协议(载波监听多路访问协议)</h5><ul><li><p><strong>CS</strong>:载波监听，每个站在发送数据前要检查总线上是否还有其他计算机在发送数据</p></li><li><p>通过总线的电压来判断是否有多个站在发送信息，因为多个站发送信息时电压会变大</p></li><li><p><strong>MA</strong>:多点接入，表示多个计算机连接在同一个总线之中</p></li><li><p>协议思想：发送帧之前，监听信道</p></li><li><h5 id="监听结果">监听结果</h5><ul><li>信道空闲:<strong>发送完整帧</strong></li><li>信道忙:推迟发送</li></ul></li></ul></li><li><h5 id="CSMA-CD协议-载波监听多点接入-碰撞检测">CSMA/CD协议(载波监听多点接入/碰撞检测)</h5><ul><li><strong>先听再说，边听边说</strong></li><li><strong>CS:发送数据前和发送数据时都要监听</strong></li><li><strong>MA</strong>：<strong>多点接入在一条总线上</strong></li><li><strong>CD:边发送边监听(以电压情况判断是否其他站点也在发送)</strong></li></ul></li></ul></li><li><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711103703.png" alt="image-20210711103654516"></p><ul><li><p>在(0-2t)的时间可以发现有没发送冲突</p></li><li><p>接收方和发送方会通过特定的算法判断出有没有发生冲突</p></li><li><h5 id="CSMA-CA协议">CSMA/CA协议</h5><ul><li>发送前先监听</li><li>空闲则发送一个RTS(很好解决隐蔽站问题，因为只有接收方接收了那个主机的RTS，那个主机才会发送），包括发射端的地址、接收端地址、下一份数据持续发送的时间等信息；信道忙则等待。</li><li>接收端收到RTS后将响应CTS给源主机</li><li>收到CTS后开始发送数据(同时预约信道:告诉其他站点自己要发多久)</li><li>接收方收到数据后用CRC检验，若正确返回一个ACK帧</li><li>发送方收到ACK帧，则继续发送，否则就采用二进制退避算法来解决</li></ul></li></ul></li></ul></li></ul><h4 id="Q-为什么监听信道了，还会发送冲突？">Q:为什么监听信道了，还会发送冲突？</h4><p><strong>A</strong>:电磁波的传播速率有限，在电磁波传输的时候我们是不知道是否有其他站点在发送数据</p><h3 id="如果发生冲突则所有站点发送的数据报废，需要重新发送">如果发生冲突则所有站点发送的数据报废，需要重新发送</h3><h3 id="CSMA-CD确定重传机制的算法-截段二进制指数规避算法">CSMA/CD确定重传机制的算法:截段二进制指数规避算法</h3><ul><li>定义参数k=重传次数，k&lt;=10。当重传次数大于10，k不在增加。</li><li>在[0~2<sup>k</sup>-1]范围内随机选一个为x，要等待的时间就是xt</li><li>当重传次数为16次的时候还没发送出去，就抛弃此帧，并向上层报告错误</li></ul><h3 id="最小帧长">最小帧长</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711140234.png" alt="image-20210711140234032"></p><p><strong>注释</strong>:</p><p>如果帧太短，就会造成在检测到碰撞的情况下，已经将帧发送完毕。这样意义不大</p><p>如果帧的长度不够帧的最小长度，那么就会填充无用数据到64B</p><h3 id="CSMA控制帧发送有三个协议">CSMA控制帧发送有三个协议</h3><ul><li><h4 id="1-坚持CSMA">1-坚持CSMA</h4><ul><li><h5 id="发送之前要监听，如果空闲则传输，如果忙则一直监听，直到空闲就发送数据">发送之前要监听，如果空闲则传输，如果忙则一直监听，直到空闲就发送数据</h5></li><li><h5 id="如果有冲突则，等待一个随机长的时间再监听，重复上述过程">如果有冲突则，等待一个随机长的时间再监听，重复上述过程</h5></li><li><h5 id="优点-信道的利用率高">优点:信道的利用率高</h5></li><li><h5 id="缺点-如果有两个以上的站点同时发送信息，则冲突不可以避免">缺点:如果有两个以上的站点同时发送信息，则冲突不可以避免</h5></li></ul></li><li><h4 id="非坚持CSMA">非坚持CSMA</h4><ul><li><h5 id="要发送先监听，空闲直接传输">要发送先监听，空闲直接传输</h5></li><li><h5 id="忙则等待一个随机的时间之后再进行监听">忙则等待一个随机的时间之后再进行监听</h5></li><li><p>**优点:**降低冲突可能性</p></li><li><p>**缺点:**信道利用率低(随机的时间之内有可能是空闲的)</p></li></ul></li><li><h4 id="p-坚持CSMA">p-坚持CSMA</h4><ul><li><h4 id="要发送先监听，空闲以p概率直接传输，概率1-p等待下一个时间槽再传输">要发送先监听，空闲以p概率直接传输，概率1-p等待下一个时间槽再传输</h4></li><li><h4 id="忙则持续监听，直到信道空闲以p概率发送。">忙则持续监听，直到信道空闲以p概率发送。</h4></li><li><h4 id="若冲突则等待下一个时间槽开始监听，并重复上述过程">若冲突则等待下一个时间槽开始监听，并重复上述过程</h4></li><li><h4 id="是前两种-1-坚持csma和非坚持csma的结合-提高信道利用率和降低冲突可能性。">是前两种(1-坚持csma和非坚持csma的结合):提高信道利用率和降低冲突可能性。</h4></li></ul></li></ul><h3 id="三种CSMA对比总结">三种CSMA对比总结</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210710230039.png" alt="image-20210710230038848"></p><h3 id="多路复用技术：把多个信号组合在一条物理信道上传输。在接收端的时候再将信号给分离开来">多路复用技术：把多个信号组合在一条物理信道上传输。在接收端的时候再将信号给分离开来</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210710133734.png" alt="image-20210710133733765"></p><h3 id="思维导图-3">思维导图</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711140421.png" alt="image-20210711140421595"></p><h2 id="CSMA-CA协议-载波监听多点接入-碰撞避免">CSMA/CA协议(载波监听多点接入/碰撞避免)</h2><p><strong>CSMA/CA和CSMA/CD的一个区别：CSMA/CA是应用在无线局域网中，CSMA/CD是应用在总线式以太网之中</strong></p><h3 id="CSMA-CD在无线局域网中的不足">CSMA/CD在无线局域网中的不足</h3><ul><li>无法做到360<sup>。</sup>全面检测</li><li>存在隐蔽站问题:当A向B发信息的时候，C由于检测不到信道中存在着信号，也向B发送。从而造成冲突</li></ul><h2 id="总结-2">总结</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711142848.png" alt="image-20210711142848491"></p><h1>8.轮询访问介质访问控制</h1><h2 id="介质访问控制协议-MAC协议">介质访问控制协议(MAC协议)</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711143846.png" alt="image-20210711143845932"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711144252.png" alt="image-20210711144252034"></p><h2 id="令牌传递协议-2">令牌传递协议</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711145043.png" alt="image-20210711145043441"></p><p><strong>注释</strong></p><p>TCU:转发数据的作用</p><h2 id="过程-2">过程</h2><ul><li>令牌一开始会在环网中一直挨个询问，如果有人要发送信息，那么久到它哪里去，先是修改标志位，意味着令牌被人持有。</li><li>将要发送的数据放入令牌中，继续在环网中游走。当到了目的主机后，目的主机拷贝数据。</li><li>令牌继续游走，当回到源主机的时候，源主机回收信息，并修改标志位，意味着令牌空闲。</li></ul><h1>9.局域网基本概念和体系结构</h1><h3 id="局域网-LAN-在某一区域由多台计算机互联而成使用广播信道">局域网(LAN):在某一区域由多台计算机互联而成使用广播信道</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711150003.png" alt="image-20210711150002930"></p><h3 id="局域网网络拓扑结构-常使用总线型">局域网网络拓扑结构(常使用总线型)</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711150622.png" alt="image-20210711150622270"></p><h3 id="数据传输的方向是规定好的">数据传输的方向是规定好的</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711151050.png" alt="image-20210711151049980"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711151439.png" alt="image-20210711151438958"></p><p><strong>注释</strong></p><p>WFI是无线局域网中的一种应用，WIFI的使用范围更加有限</p><h2 id="IEEE802标准">IEEE802标准</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711152129.png" alt="image-20210711152129277"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711152043.png" alt="image-20210711152043576"></p><h2 id="-2"></h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711152403.png" alt="image-20210711152403644"></p><h2 id="思维导图-4">思维导图</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711152638.png" alt="image-20210711152638360"></p><h1>10.以太网</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711160821.png" alt="image-20210711160820796"></p><h2 id="以太网特点：">以太网特点：</h2><ul><li>无连接:发送方和接收方之间无握手过程</li><li>不可靠:不对发送的数据进行编号，接收方不进行确认，差错帧直接丢弃，纠正由高层负责</li></ul><h4 id="总结：以太网实现无差错接收-不实现可靠传输。">总结：以太网实现无差错接收,不实现可靠传输。</h4><h4 id="以太网的拓扑：物理上星型，逻辑上总线型">以太网的拓扑：物理上星型，逻辑上总线型</h4><h3 id="10BASE-T以太网">10BASE-T以太网</h3><h3 id="概念-是传输基带信号的双绞线以太网，T表示采用双绞线，现10BASE-T采用的是无屏蔽双绞线，传输速率为10MB-s">概念:是传输基带信号的双绞线以太网，T表示采用双绞线，现10BASE-T采用的是无屏蔽双绞线，传输速率为10MB/s</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711162120.png" alt="image-20210711162119889"></p><p><strong>注释</strong></p><p>物理是星型，逻辑上是总线型</p><p>采用曼彻斯特编码</p><p>采用csma/cd介质访问控制</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711164458.png" alt="image-20210711164457922"></p><p><strong>Q1</strong>:为什么没有帧结束符?</p><p>A:没有数据发送的时候是没有电压变化的，所以可以根据有无电压的变化来判断帧什么时候结束</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711164831.png" alt="image-20210711164831594"></p><h4 id="思维导图-5">思维导图</h4><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711165024.png" alt="image-20210711165024438"></p><h1>11.无线局域网</h1><h4 id="IEE802-11是规定无线局域网标准的">IEE802.11是规定无线局域网标准的</h4><h3 id="802-11的MAC帧头格式">802.11的MAC帧头格式</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711170157.png" alt="image-20210711170157075"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711170259.png" alt="image-20210711170259807"></p><h3 id="无线局域网的分类">无线局域网的分类</h3><ul><li>有固定基础设施无线局域网<ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711171358.png" alt="image-20210711171357854"></li></ul></li><li>无固定基础设施无线局域网的自组织网络<ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711171525.png" alt="image-20210711171525252"></li></ul></li></ul><h1>12.广域网</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711171809.png" alt="image-20210711171809026"></p><p>中间结点叫做:结点交换机</p><p>广域网主要使用分组交换技术</p><h2 id="广域网中数据数据链路层常用协议">广域网中数据数据链路层常用协议</h2><ul><li><h3 id="PPP协议-点对点协议-拨号上网，一般使用ppp协议，只支持全双工链路">PPP协议(点对点协议):拨号上网，一般使用ppp协议，只支持全双工链路</h3></li></ul><h3 id="PPP协议满足的要求">PPP协议满足的要求</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711172826.png" alt="image-20210711172826578"></p><h3 id="PPP无需满足的要求">PPP无需满足的要求</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711172936.png" alt="image-20210711172936690"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711173215.png" alt="image-20210711173215467"></p><p><strong>注释</strong></p><p>NCP建立逻辑上的连接</p><h3 id="PPP协议过程图">PPP协议过程图</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711173636.png" alt="image-20210711173635934"></p><h3 id="PPP协议帧格式">PPP协议帧格式</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711174054.png" alt="image-20210711174054807"></p><h2 id="HDLC协议">HDLC协议</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711174318.png" alt="image-20210711174317882"></p><h3 id="HDLC的站">HDLC的站</h3><ul><li><h4 id="主站-发送命令和起控制作用">主站:发送命令和起控制作用</h4></li><li><h4 id="从站-接收主站发来的信息，发送响应帧">从站:接收主站发来的信息，发送响应帧</h4></li><li><h4 id="复合站-既可以发送，也可以接收">复合站:既可以发送，也可以接收</h4></li></ul><h3 id="三种数据操作方式">三种数据操作方式:</h3><ul><li><h4 id="正常响应方式">正常响应方式</h4><ul><li>从站要发送信息，先经过主站的同意</li></ul></li><li><h4 id="异步平衡方式">异步平衡方式</h4><ul><li>每个站都可以发送信息和接收信息</li></ul></li><li><h4 id="异步响应方式">异步响应方式</h4><ul><li>不经过主站同意就可以发送信息</li></ul></li></ul><h3 id="HDLC协议帧格式">HDLC协议帧格式</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711175740.png" alt="image-20210711175740374"></p><p><strong>注释</strong></p><p>地址:填目的地址</p><p>控制:确定帧的类型:信息帧、监督帧、无编号帧</p><h2 id="PPP和HDLC协议-广域网链路层">PPP和HDLC协议(广域网链路层)</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711180303.png" alt="image-20210711180303343"></p><p><strong>Q</strong>:为什么实际生活中基本不怎么使用HDLC协议呢</p><p><strong>A</strong>:在网络层和数据链路层不推荐实现可靠传输，因为这样要花时间</p><h2 id="思维导图-6">思维导图</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711180602.png" alt="image-20210711180602163"></p><h1>13链路层设备</h1><h4 id="主机和集线器的距离不能很远，否则越远失真越严重">主机和集线器的距离不能很远，否则越远失真越严重</h4><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711183158.png" alt="image-20210711183158139"></p><p><strong>注释</strong></p><p>范围变大，冲突可能性提高</p><h2 id="链路层扩展以太网提高范围而不提高冲突性">链路层扩展以太网提高范围而不提高冲突性</h2><ul><li><h3 id="网桥">网桥</h3><ul><li><p>决定是否转发，向那个端口转发。或者是丢弃</p></li><li><h3 id="优点">优点</h3><ul><li>增大吞吐量，不同网段，可以同时通信而不冲突</li><li>扩大物理范围</li><li>提高可靠性:一个网段内发生故障，不影响其他网段的通信</li><li>可以互联不同的以太网</li></ul></li></ul></li><li><h3 id="交换机">交换机</h3></li></ul><p>网段：使用同一个物理设备，能够之间通信的那一部分。</p><h2 id="网桥分类">网桥分类</h2><ul><li><p>透明网桥</p><ul><li><p>透明是指主机不知道帧要经过几个网桥</p></li><li><h4 id="通信过程">通信过程</h4></li><li><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711185358.png" alt="image-20210711185358611"></p></li><li><p>在网段内广播</p></li><li><p>当数据流向网桥时，先看转发表有没有源主机的信息，如果没有则添加</p></li><li><p>看转发表有没目的主机的信息，没有则添加。有则向对应的端口转发。这个过程重复n此</p></li><li><p>转发表会定时刷新，删除所有内容，重新自学习</p></li></ul></li><li><h3 id="源路由网桥">源路由网桥</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711190242.png" alt="image-20210711190242651"></p><ul><li>发送帧时附件上最佳路径放(路径最短/路由最小)在帧首部</li><li><strong>方法</strong>:广播一个发现帧，接收方会返回所有路径可能</li><li>然后在所有路径可能选取最佳路径</li></ul></li></ul><h2 id="以太网交换机–多接口网桥">以太网交换机–多接口网桥</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711190548.png" alt="image-20210711190548817"></p><h3 id="直通式交换机">直通式交换机</h3><ul><li><p>查完地址就转发</p></li><li><h3 id="特点-2">特点</h3><ul><li>-延迟小</li><li>可靠性低</li><li>不同速率的交换机无法交换信息</li></ul></li></ul><h3 id="存储转发式交换机">存储转发式交换机</h3><ul><li><p>帧放入高速缓存，并检查正确与否，正确就转发，不正确就丢弃</p></li><li><h4 id="特点-3">特点</h4><ul><li>延迟大</li><li>可靠性高</li><li>支持不同速率交换机的交换</li></ul></li></ul><h2 id="冲突域和广播域">冲突域和广播域</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711191328.png" alt="image-20210711191328629"></p><h2 id="例题">例题</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711191521.png" alt="image-20210711191521734"></p><p><strong>注释</strong></p><p>本身一个广播域，加上一个路由器一个广播域</p><p>交换机有几台设备就有几个冲突域</p><h2 id="思维导图-7">思维导图</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210711191643.png" alt="image-20210711191643060"></p>]]></content>
      
      
      <categories>
          
          <category> 王道计算机网络 </category>
          
          <category> 第三章数据链路层 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 王道计算机网络 </tag>
            
            <tag> 物理层 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第二章物理层</title>
      <link href="/2021/07/06/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BD%91/%E7%AC%AC%E4%BA%8C%E7%AB%A0%E7%89%A9%E7%90%86%E5%B1%82/"/>
      <url>/2021/07/06/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BD%91/%E7%AC%AC%E4%BA%8C%E7%AB%A0%E7%89%A9%E7%90%86%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>1.物理层基本概念</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706100134.png" alt="image-20210706100126956"></p><h2 id="目的：如何在传输媒体上传输比特流">目的：如何在传输媒体上传输比特流</h2><h3 id="物理层接口特性">物理层接口特性</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706100750.png" alt="image-20210706100750184"></p><p><strong>注释</strong></p><p>1.提到数字一般是指电气特性</p><p>2.提到电平一般是指功能特性</p><p>3.提到时序一般是指规程特性</p><h2 id="2-数据通信基础知识">2.数据通信基础知识</h2><h3 id="典型数据的通信模型">典型数据的通信模型</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706101445.png" alt="image-20210706101445785"></p><p><strong>注释</strong></p><p><strong>Q1</strong>:为什么要模拟信号呢？</p><p><strong>A</strong>:因为公用电话网(模拟信道)只支持模拟信号的传输</p><p>**Q2:**什么是数字信号</p><p>**A：**将比特流转为为电信号的形式，变现为离散值</p><h3 id="数据通信相关术语">数据通信相关术语</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706102443.png" alt="image-20210706102443367"></p><h3 id=""></h3><h3 id="设计通信系统需要考虑的三个问题">设计通信系统需要考虑的三个问题</h3><ul><li><h4 id="采用单工、半双工、全双工的哪一种？">采用单工、半双工、全双工的哪一种？</h4></li><li><h4 id="采用串行通信还是并行通信？">采用串行通信还是并行通信？</h4></li><li><h4 id="采用同步通信还是异步通信？">采用同步通信还是异步通信？</h4></li></ul><h3 id="串行传输-一条信道按比特顺序发送">串行传输:一条信道按比特顺序发送</h3><ul><li><h4 id="特点：速度慢，费用低，适合远距离">特点：速度慢，费用低，适合远距离</h4></li></ul><h3 id="并行传输：多条信道多位比特同时发送">并行传输：多条信道多位比特同时发送</h3><ul><li><h4 id="特点：速度快，费用高，适合近距离">特点：速度快，费用高，适合近距离</h4></li></ul><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706110634.png" alt="image-20210706110633933"></p><p><strong>一个孔一条线并行传输</strong></p><h3 id="同步传输-是以数据区块为单位-数据-在传输区块之前，先传输n个同步字符，再送出整个区块。">同步传输:是以数据区块为单位(数据)在传输区块之前，先传输n个同步字符，再送出整个区块。</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706112530.png" alt="image-20210706112530672"></p><p><strong>解释</strong></p><p>先传输同步字符，告诉接收方做好接收准备，那么接收方会调整自己的时钟周期，保证和发送端的一直，达到同步</p><h3 id="异步传输：将比特分成小组进行传输，小组可以是n个比特位为一组。发送方可以随时发送比特而接收方不知道它什么时候会到达。但是发送时发送端会添加起始字符和接收字符">异步传输：将比特分成小组进行传输，小组可以是n个比特位为一组。发送方可以随时发送比特而接收方不知道它什么时候会到达。但是发送时发送端会添加起始字符和接收字符</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706114112.png" alt="image-20210706114112924"></p><p><strong>注释</strong></p><p>并不是连续发送字符，也不是周期性发送字符 。</p><p>当接收方接收到起始字符，那么接收方就知道可以接收数据了，当遇到结束为时，就说明接收结束，可以等待下次接收。</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706113731.png" alt="image-20210706113731459"></p><h2 id="码元">码元</h2><ul><li>一个固定时长的信号波形(数字脉冲，起伏变化)代表不同离散值得波形，是数字信号的计量单位</li></ul><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706121341.png" alt="image-20210706121341572"></p><p><strong>注释</strong></p><p>画红色部分就是码元，码元和波形的种类对应，也就是和值种类的个数对应。横线对应的时长表示码元宽度</p><h3 id="N位比特可以表示2-N进制的码元">N位比特可以表示2^N进制的码元</h3><h3 id="码元传送速率-单位时间内传输的码元个数单位是波特-Baud-简写为B">码元传送速率:单位时间内传输的码元个数单位是波特(Baud)简写为B</h3><h4 id="码元速率只和码元长度有关与进制数无关">码元速率只和码元长度有关与进制数无关</h4><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706131645.png" alt="image-20210706131645228"></p><h3 id="信息传输速率-单位时间内传输的比特数单位b-s">信息传输速率:单位时间内传输的比特数单位b/s</h3><h3 id="模拟信号中的带宽-最高频率和最低频率的差值，这个频率范围就是带宽">模拟信号中的带宽:最高频率和最低频率的差值，这个频率范围就是带宽</h3><h1>3.奈氏准则和香农定理</h1><h4 id="失真：信号收到干扰，已经变得和最初不一样了，一种是可以信息可以读出，另一种是受损到读不出了">失真：信号收到干扰，已经变得和最初不一样了，一种是可以信息可以读出，另一种是受损到读不出了</h4><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706153049.png" alt="image-20210706153048947"></p><h3 id="影响失真的因素">影响失真的因素</h3><ul><li><h4 id="码元传输速率">码元传输速率</h4></li><li><h4 id="信号传输距离">信号传输距离</h4></li><li><h4 id="噪声干扰">噪声干扰</h4></li><li><h4 id="传输媒体质量">传输媒体质量</h4></li></ul><h3 id="码间串扰">码间串扰</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706153422.png" alt="image-20210706153422379"></p><p><strong>注释</strong></p><p><strong>Q1</strong>为什么频率过低不能通过电话线</p><p><strong>A</strong>信号在传输过程中不可避免的发送一些衰减，如果频率过低，会导致衰减到不可复原的地步</p><p><strong>Q2</strong>频率过高为什么不能通过</p><p><strong>A</strong>发生码间串扰，码元传输速率过快，导致分不清码元之间有什么区别</p><h3 id="奈斯准则-解决码间串扰">奈斯准则(解决码间串扰)</h3><h4 id="定义：在理想低通-无噪声，带宽受限-，为避免码间串扰，极限码元传输速率为2W-Baud-W是指信道带宽">定义：在理想低通(无噪声，带宽受限)，为避免码间串扰，极限码元传输速率为2W Baud,W是指信道带宽</h4><p><strong>注释</strong></p><p>低通：低于最高频率</p><h3 id="极限数据率-2WLog-sub-2-sub-V（b-s">极限数据率=2WLog<sub>2</sub>V（b/s)</h3><h3 id="V-指码元种类个数">V:指码元种类个数</h3><h3 id="Note">Note</h3><ul><li>任何信道中，码元传输速率有限制，如果超过此限制，那么会出现码间串扰</li><li>频带越宽(通过信号的高频分量就越多)就可以用更高的速率进行码元的有效传输。W越高速率就越快</li><li>奈氏准则只是限制了码元传输速率，并没有给出信息传输速率的限制</li><li>由于奈氏准则对码元速率的限制，要想提高信号传输速率，就必须提高码元携带比特信息量。采用多元制的调制方法</li></ul><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706160243.png" alt="image-20210706160243662"></p><h2 id="香农定理-在带宽受限且有噪声的信道中为了不产生误差，信息传输速率的上限值">香农定理:在带宽受限且有噪声的信道中为了不产生误差，信息传输速率的上限值</h2><p>噪声不可避免，噪声的影响是相对的。信号强那么噪声影响就弱，信号弱，影响就强</p><h3 id="信噪比-信号的平均功率-噪声的平均功率常记作S-N。单位是dB-分贝-。">信噪比=信号的平均功率/噪声的平均功率常记作S/N。单位是dB(分贝)。</h3><h4 id="信噪比-10log-sub-10-sub-S-N">信噪比=10log<sub>10</sub>(S/N)</h4><h4 id="数据传输速率的极限公式-Wlog-sub-2-sub-1-S-N-单位-b-s">数据传输速率的极限公式=Wlog<sub>2</sub>(1+S/N)单位(b/s)</h4><h4 id="注释">注释</h4><p>如果信噪比不带单位就直接带入极限公式，如果带单位dB那么先用信噪比公式进行换算，再带入。</p><h4 id="Note-2">Note</h4><ul><li>带宽或信噪比越大，传输速率越快</li><li>带宽和信噪比确定，传输速率就确定</li><li>只要实际传输速率低于极限传输速率，那么一定有方法可以实现无差错的传输</li><li>香农定理得出的只是理论值，实际值要比理论值低上不少</li><li>从香农定理可以看出，如果带宽和信噪比没有上限(不可能),传输速度就没有上限</li></ul><p><img src="C:%5CUsers%5CAIX%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210706193910706.png" alt="image-20210706193910706"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706195449.png" alt="image-20210706194544118"></p><p><strong>注释</strong></p><p>问你最大数据率那么就要求两种，选比较小的那个。香农定理和奈氏准(可以转化成求最大数据传输率)则都是求最大的数据率。</p><h1>4.编码与调制</h1><h3 id="基带信号-信源-数字信道上传输，是指没有经过载波调制的原始电信号">基带信号(信源):数字信道上传输，是指没有经过载波调制的原始<strong>电</strong>信号</h3><h3 id="宽带信号-模拟信道上传输-将基带信号进行调制-载波调制，频率变高-后形成模拟信号，然后采用频分复用技术实现宽带传输">宽带信号:模拟信道上传输,将基带信号进行调制(载波调制，频率变高)后形成模拟信号，然后采用频分复用技术实现宽带传输</h3><p><strong>注释</strong></p><p>基带信号没有经过调制，适合近距离传输(信号衰减小)</p><p>宽带信号经过调制，适合远距离传输(信号衰减大)</p><h2 id="编码和调制">编码和调制</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706200658.png" alt="image-20210706200658796"></p><h3 id="数字数据：0、1组成的数据">数字数据：0、1组成的数据</h3><h2 id="数字数据编码为数字信号">数字数据编码为数字信号</h2><h3 id="编码方式">编码方式</h3><ul><li><h4 id="非归零编码">非归零编码</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706202819.png" alt="image-20210706202819271"></li><li>高1低0</li><li>没有检错功能</li><li>无法判断一个码元的开始和结束</li><li>难以保持同步：图像是一条直线的话，表示全0全1，这样接收方就不知到底发送了几个1/0，这就需要再发送一个时钟周期:告诉接收方一个1是多长时间。这样接收方就可以给信号各处打断点。<strong>但是它建立同步比较困难</strong></li></ul></li><li><h4 id="曼彻斯特编码">曼彻斯特编码</h4><ul><li><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706204114.png" alt="image-20210706204114539"></p></li><li><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706204129.png" alt="image-20210706204129517"></p></li><li><p>将一个码元分为两个相等的时间间隔，前低后高表示1，后低前高表示0(规定是任意的)</p></li><li><p>数据传输速率只有调制速率的0.5。</p></li><li><p>码元传输速率为2，因为变化了2(脉冲次数)次一个周期内</p></li><li><p>调制速率就是码元速率</p></li></ul></li><li><h4 id="差分曼彻斯特编码">差分曼彻斯特编码</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706210313.png" alt="image-20210706210313277"></li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706210333.png" alt="image-20210706210333217"></li><li>上一码元后半段和本码元前半段不相同就是0</li><li>上一码元后半段和本码元前半段相同就是1</li><li>可以实现自同步</li><li>抗干扰强于曼彻斯特</li></ul></li><li><h4 id="归零编码">归零编码</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706203340.png" alt="image-20210706203340018"></li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706203313.png" alt="image-20210706203313404"></li><li>在一个码元或者时钟周期内需要归为0</li><li>后半个周期一定归0</li></ul></li><li><h4 id="反向不归零编码">反向不归零编码</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706203420.png" alt="image-20210706203420211"></li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706203442.png" alt="image-20210706203442802"></li><li>0表示翻转，1表示不变。一个码元内不变化，只在交界处变化</li><li>如果是全0则一直翻转，就不需要时钟周期</li><li>如果是全1则需要时钟周期</li></ul></li><li><h4 id="4B-5B编码">4B/5B编码</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706211031.png" alt="image-20210706211031124"></li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706201810.png" alt=""></p><h2 id="数字数据编码为模拟信号">数字数据编码为模拟信号</h2><h4 id="调制-将数字信号变为模拟信号">调制:将数字信号变为模拟信号</h4><h4 id="解调-将模拟信号变为数字信号">解调:将模拟信号变为数字信号</h4><h3 id="调制常见的方法">调制常见的方法</h3><ul><li><h4 id="调幅-ASK">调幅(ASK)</h4><ul><li><img src="C:%5CUsers%5CAIX%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210706211752613.png" alt="image-20210706211752613"></li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706211810.png" alt="image-20210706211810541"></li><li>1有幅度，0没幅度</li></ul></li><li><h4 id="调频-FSK">调频(FSK)</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706212141.png" alt="image-20210706212141426"></li></ul></li><li><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706212207.png" alt="image-20210706212207830"></p><ul><li>频率:单位时间内震动的次数</li></ul></li><li><p>0对应低频，1对应高频</p></li><li><h4 id="调相-PSK">调相(PSK)</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706212405.png" alt="image-20210706212141426"></li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706212432.png" alt="image-20210706212432886"></li></ul></li><li><h4 id="调幅加调相-QAM">调幅加调相(QAM)</h4><ul><li>两种技术的结合</li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706213320.png" alt="image-20210706213320118"></li></ul></li></ul><h2 id="模拟数据编码为数字信号">模拟数据编码为数字信号</h2><h3 id="模拟数据：就是音频等文件，联系实际我们可以知道表现为脉冲的形式">模拟数据：就是音频等文件，联系实际我们可以知道表现为脉冲的形式</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706214255.png" alt="image-20210706214255004"></p><h4 id="将音频文件存储在计算机中必须进行脉码调制-PCM-确保最高保真这个过程就是音频数字化">将音频文件存储在计算机中必须进行脉码调制(PCM)确保最高保真这个过程就是音频数字化</h4><h4 id="过程">过程</h4><ul><li>采样:安照周期为n对时间轴进行采样</li><li>量化:对所有采样到的值进行取整，分级</li><li>编码:将分级到的结果转为二进制编码，假设分级结果有n个那么编码所用比特数=log<sub>2</sub>N</li></ul><h3 id="所有的模拟信号都是若干个正弦波叠加而成，相反也就可以拆解为最初的正弦波">所有的模拟信号都是若干个正弦波叠加而成，相反也就可以拆解为最初的正弦波</h3><h3 id="人耳所能听到的频率范围是20hz-20KHZ，如果要想人听清音乐或者视频，那么必须采样是人耳最高频率的2倍以上">人耳所能听到的频率范围是20hz~20KHZ，如果要想人听清音乐或者视频，那么必须采样是人耳最高频率的2倍以上</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706222345.png" alt="image-20210706222345434"></p><h1>5.数据交换方式</h1><ul><li><h4 id="电路交换">电路交换</h4></li><li><h4 id="报文交换">报文交换</h4></li><li><h4 id="分组交换">分组交换</h4><ul><li>数据报方式</li><li>虚电路方式</li></ul></li></ul><p>其中报文交换、分组交换使用的是存储转发的交换方式</p><h3 id="电路交换-2">电路交换</h3><ul><li><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706230333.png" alt=""></p></li><li><h4 id="建立连接">建立连接</h4><ul><li>先向它最近的交换设备发送呼叫请求，其中的信息包含主机A和主机B的地址信息，交换设备收到后进行路由选择决定下一跳的地址。同时把呼叫请求转发给下一跳的设备，一直这样进行下去，直到到主机B，如果主机B可以接收的话，会发送一个呼叫应答的信息原路返回给主机A。同时这个路径上的路线会被占用</li></ul></li><li><h4 id="通信">通信</h4><ul><li>双方可以同时发送信息是全双工</li></ul></li><li><h4 id="释放连接">释放连接</h4><ul><li>A发送一个释放请求给B，当B收到释放请求时，会发个应答信息原路返回给A，同时释放调路径上的设备线路，每到一个设备就释放一个。</li></ul></li><li><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706231636.png" alt="image-20210706231636817"></p></li></ul><p><strong>注释</strong></p><p>独占资源:在通信期间一直占用，不能被别人使用</p><p>适合传输大量数据：主要还是对资源利用率的考虑，建立连接是相对麻烦的，如果说建立起来不发数据或者发少量数据，而你一直占着。这样就很浪费</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210706232026.png" alt="image-20210706232026347"></p><p><strong>注释</strong></p><p>第一二三个优点是因为独占资源</p><p>缺点：无数据存储能力，难以平滑通信量:如果数据量很多，那么久只能丢失</p><h2 id="报文交换-2">报文交换</h2><ul><li>是网路中交换与传输的数据单元，是一次性要发送的数据块(语音、文字、文件大小不限)报文包含了将要发送的完整的数据信息，长度不一，长度不限</li><li>报文=信息+报头(原地址+目的地址)</li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707084700.png" alt="image-20210707084651922"></li></ul><p><strong>注释</strong></p><p>在发送信息的时候，并不独占信道，其他数据也可以发信息。</p><p>如果线路繁忙的时候，路由器就暂存报文，直到线路空闲，再发送</p><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707085456.png" alt="image-20210707085456034"></li></ul><h2 id="分组交换-互联网中普遍使用的">分组交换(互联网中普遍使用的)</h2><ul><li>计算机网络中不能一次性传输任意长度的数据，所以就把数据分割成小块，然后逐块发送，小块就是分组</li><li>分组的大小一般为128B</li><li>计算机网络中是以分组为单位进行存储转发的</li><li>接收端完整接收后需要将接收到的分组进行组装，还原成最初的信息(因为分组可以走不通的路线，也就是说不一定按顺序达到)</li><li>交换设备会进行差错检测</li></ul><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707090545.png" alt="image-20210707090545578"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707091018.png" alt="image-20210707091018023"></p><h2 id="数据交换方式的选择">数据交换方式的选择</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707091327.png" alt="image-20210707091327595"></p><h2 id="分组交换-2">分组交换</h2><ul><li><h3 id="数据报交换">数据报交换</h3><ul><li><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707091936.png" alt="image-20210707091936438"></p></li><li><h3 id="特点">特点</h3><ul><li>无连接：可以随时发送分组，也可以随时接收分组</li><li>到达接收端时报文可能乱序、重复、丢失</li><li>每个分组必须携带源地址、目的地址、分组号</li><li>数据量较大或者拥塞时，时延会大大增加。交换设备也可以看情况的丢弃分组</li><li>当交换设备或者链路发生故障时,可以更新转发表，选过另一条路径。对故障的适应能力强，适用于突发性通信。不适合长报文、会话式通信</li></ul></li></ul></li></ul><h2 id="虚电路方式">虚电路方式</h2><ul><li><h4 id="结合了数据报方式和电路交换方式">结合了数据报方式和电路交换方式</h4></li><li><h3 id="虚电路通信的三个阶段">虚电路通信的三个阶段</h3><ul><li><h4 id="建立连接-2">建立连接</h4></li><li><h4 id="通信-2">通信</h4><ul><li>每个分组需要携带虚电路号，分组号，检验和控制信息等</li><li>不需要携带源地址和目的地址</li><li>建立好连接之后，此线路已经在逻辑上存在了</li><li>接收方：根据虚电路号确定不同主机发送的信息，再根据分组号还原最初的信息</li></ul></li><li><h4 id="释放连接-2">释放连接</h4><ul><li>A发送请求释放分组</li><li>B接收到请求释放分组后发送应答分组，并释放沿路的链接</li></ul></li></ul></li><li><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707094138.png" alt="image-20210707094138002"></p><ul><li>呼叫请求和呼叫应答都是以分组的形式传输的。</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707104801.png" alt="image-20210707104801005"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707104825.png" alt="image-20210707104825574"></p><h1>6.物理层传输介质</h1><h3 id="传输介质">传输介质</h3><ul><li><h4 id="导向性传输介质-固体媒介">导向性传输介质:固体媒介</h4><ul><li><h5 id="双绞线-电信号">双绞线(电信号)</h5><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707105640.png" alt="image-20210707105640650"></li><li>绞合的目的是抵消磁场，避免磁场的干扰</li></ul></li><li><h4 id="同轴电缆-电信号">同轴电缆(电信号)</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707110113.png" alt="image-20210707110113714"></li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707110509.png" alt="image-20210707110509325"></li><li>有了外导体屏蔽层，抗干扰能力强</li><li>基带同轴电缆：在局域网中应用</li><li>宽带同轴电缆：有线电视系统</li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707110528.png" alt="image-20210707110528269"></li></ul></li><li><h4 id="光纤-光信号">光纤(光信号)</h4><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707111044.png" alt="image-20210707111044631"></li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707111416.png" alt="image-20210707111416811"></li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707111537.png" alt="image-20210707111537789"></li><li>中继距离：到中继器的距离(对信号进行放大)</li></ul></li></ul></li><li><h4 id="非导向性传输介质-自由空间-空气、海水等等">非导向性传输介质:自由空间(空气、海水等等)</h4><ul><li><h5 id="无线电波">无线电波</h5><ul><li>信号向所有方向传播</li><li>穿透能力强，远距离传播</li><li>应用于通信领域(WIFI、手机通信)</li></ul></li><li><h5 id="微波-地面微波接力通信-卫星通信">微波(地面微波接力通信+卫星通信)</h5><ul><li><p>信号固定方向传播</p></li><li><p>频率高、频段范围宽、数据率高</p></li><li><h5 id="地面微波接力通信">地面微波接力通信</h5><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707112440.png" alt="image-20210707112440822"></li><li>红色的竖线表示中继站，将信号方向扭转从而传到别的中继站，进而全球连接起来</li></ul></li><li><h5 id="卫星通信">卫星通信</h5><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707113348.png" alt="image-20210707113348849"></li><li>误码：识别不出码元</li></ul></li></ul></li><li><h5 id="红外线、激光">红外线、激光</h5><ul><li>信号固定方向传播</li><li>要将传输的信号转为对应的格式，你用红外线传输就要转成红外线信号格式</li></ul></li></ul></li></ul><h1>7.物理层设备</h1><ul><li><h2 id="中继器">中继器</h2><ul><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707114000.png" alt="image-20210707114000671"></li><li>对信号进行再生和还原(对应两个端口)(再生数字信号)</li><li>先对信号进行整形，再放大，从而还原出来</li><li>模拟信号对应的是放大器</li><li>数字信号对应的是中继器</li><li>可以连相同媒体或者不同媒体</li><li>只负责再生还原转发，不检错</li><li>同网段同协议</li><li>符合5-4-3规则</li></ul></li><li><h2 id="集线器">集线器</h2><ul><li>多端口中继器</li><li><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210707115408.png" alt="image-20210707115408098"></li><li>类似于广播通信</li><li>如果冲突，则都不转发。过一段时间再发送一次看是否会碰撞</li><li>主机平分带宽</li></ul></li></ul><h1></h1>]]></content>
      
      
      <categories>
          
          <category> 王道计算机网络 </category>
          
          <category> 物理层 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物理层 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识计算机网络</title>
      <link href="/2021/07/02/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BD%91/%E7%AC%AC%E4%B8%80%E7%AB%A0%E8%AE%A1%E7%BD%91%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/"/>
      <url>/2021/07/02/%E7%8E%8B%E9%81%93%E8%AE%A1%E7%BD%91/%E7%AC%AC%E4%B8%80%E7%AB%A0%E8%AE%A1%E7%BD%91%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>1.概念及功能</h1><p>游戏中的时延(<strong>RTT</strong>)：往返传播时延，其值越大也就是越卡。</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210702171437.png" alt="image-20210702171421819"></p><p>ISO/OSI模型和TCP/IP模型是分层结构的具体实现</p><ul><li><p>ISO/OSI：7层</p></li><li><p>TCP/IP：4层</p></li><li><p>考试和课本：5<code>层</code></p></li></ul><h2 id="计算机网络的概念">计算机网络的概念</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210702173110.png" alt="image-20210702172303484"></p><p>日常生活中的<strong>三网合一</strong>是指：依靠计算机网络将电视网、电信网、计算机网络三者融合起来</p><p>新兴概念<strong>四网合一</strong>是指：在三网合一的基础上新添加了电网</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210702194520.png" alt="image-20210702173313788"></p><h2 id="构成计算机网络的三要素">构成计算机网络的三要素</h2><ul><li><h3 id="通信设备">通信设备</h3><ul><li><h4 id="能够上网">能够上网</h4><ul><li>电脑</li><li>手机</li><li>智能手表</li><li>平板等等</li></ul></li><li><h4 id="控制信息交换">控制信息交换</h4><ul><li>路由器</li><li>交换机</li></ul></li></ul></li><li><h3 id="路线">路线</h3><ul><li><h4 id="物理线路">物理线路</h4><ul><li>网线</li></ul></li><li><h4 id="逻辑线路">逻辑线路</h4><ul><li>WiFi线路</li><li>卫星网络</li></ul></li></ul></li><li><h3 id="软件">软件</h3></li></ul><h2 id="计算机网络的概括">计算机网络的概括</h2><p>计算机网络是<strong>互联自治的计算机集合</strong>，<strong>p2p</strong>网络能够很好的体现这一点</p><h2 id="计算机网络的功能">计算机网络的功能</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210702194525.png" alt="image-20210702194446764"></p><p><strong>数据通信是最基本和重要的功能</strong></p><h2 id="资源共享的种类">资源共享的种类</h2><ul><li><strong>软件共享：远程连接即可以实现</strong></li><li><strong>硬件共享：同一局域网中打印机等资源的共享</strong></li><li><strong>数据资源</strong></li></ul><h2 id="分布式处理">分布式处理</h2><p><strong>多台计算机共同处理同一工作任务的不同部分</strong></p><p><strong>目的：为了减轻计算机的负载，加快处理速度和缩短响应时间</strong></p><h3 id="衍生出来的功能特点">衍生出来的功能特点</h3><ul><li><p><strong>提高可靠性</strong>：某一台计算机发生故障，可快速的找另一台来代替</p></li><li><p>**负载均衡：**提高工作效率，合理分配资源</p></li></ul><h2 id="因特网和互联网">因特网和互联网</h2><ul><li>互联网（internet，普通名词)，泛指由计算机网络(包括局域网、城域网、广域网等)组成的网络；</li><li>因特网（Internet，专用名词)，特指由TCP/IP协议构建的互联网(internet)。因特网是互联网的一种。</li></ul><p><strong>因特网是基于TCP/IP协议实现的</strong></p><h2 id="网络的示意图">网络的示意图</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210702201452.png" alt="image-20210702201452235"></p><h3 id="网络">网络</h3><p>多个节点通过链路链接而成</p><h3 id="互联网">互联网</h3><p>多个网络连接而成</p><p><strong>因特网是全球最大的互联网</strong></p><h2 id="ISP">ISP</h2><p>因特网服务提供商。例如移动、电信、联通</p><p>ISP为用户提供一个ip地址(外网ip地址)，有了ip地址才可以上网</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210702204042.png" alt="image-20210702204042565"></p><p>上网时产生的所有数据都会经过运营商</p><h2 id="isp-三层结构">isp 三层结构</h2><ul><li>本地ISP</li><li>地区ISP</li><li>主干ISP</li></ul><p><strong>通过路由器实现isp之间的互联</strong></p><h2 id="IXP-因特网交换点">IXP(因特网交换点)</h2><p>可以之间连接两个网络，不用走第三方网络，加快了数据的传输速度</p><h1>2. 组成与分类</h1><h2 id="计算机网络的组成">计算机网络的组成</h2><ul><li><h3 id="硬件">硬件</h3></li><li><h3 id="软件-2">软件</h3></li><li><h3 id="协议-一系列规则和约定的集合">协议(一系列规则和约定的集合)</h3></li></ul><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210702214351.png" alt="image-20210702214351672"></p><h2 id="工作方式">工作方式</h2><ul><li><h3 id="边缘部分-：端系统或者服务器">边缘部分 ：端系统或者服务器</h3><ul><li>c/s方式</li><li>p2p方式</li></ul></li><li><h3 id="核心部分：为边缘部分提供服务">核心部分：为边缘部分提供服务</h3></li></ul><h2 id="P2P下载过程">P2P下载过程</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210702215608.png" alt="image-20210702215607990"></p><p><strong>解释：</strong></p><p>​假设一个文件500M，一开始只有A有，并把这个文件分层5段，每段大小100M。现在B请求下载。当B下载了200M时候，C也请求下载，那么C就可以向A和B发起请求。从B中下载了200M,从A中下载了100M，从A、B中下载的是不同段。那么实际C就下载了300M，当D要下载的时候，就可以向A、B、C请求下载。依此类推。下载完成之后可以根据片段的哈希值还原最初的字符序列。极大的加快了下载的速度。</p><h2 id="计算机网络的组成-2">计算机网络的组成</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210702231533.png" alt="image-20210702231532903"></p><p><strong>功能组成是根据OSI模型来划分的</strong></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210702234313.png" alt="image-20210702234313514"></p><h2 id="计算机网络按分布的范围分类">计算机网络按分布的范围分类</h2><ul><li><h3 id="广域网-WAN-因特网的核心部分，主要采用交换技术">广域网(WAN):因特网的核心部分，主要采用交换技术</h3></li><li><h3 id="城域网-MAN-主要采用以太网技术">城域网(MAN):主要采用以太网技术</h3></li><li><h3 id="局域网-LAN-主要采用广播技术">局域网(LAN):主要采用广播技术</h3></li><li><h3 id="个人区域网-PAN">个人区域网(PAN)</h3></li></ul><p><strong>注意</strong>:<strong>区分网络的类型不是由距离决定的，而是由采用的那种技术决定的</strong>。</p><p>比如说：A和B相距很近，但他们之间的通信走的却是因特网，所以他们是广域网</p><h2 id="按使用者分类">按使用者分类</h2><ul><li><h3 id="专用网-军队-政府-企业内网–使用人群受限制">专用网:军队 政府 企业内网–使用人群受限制</h3></li><li><h3 id="公用网-电信网、移动网、联通网–使用人群不受限制">公用网:电信网、移动网、联通网–使用人群不受限制</h3></li></ul><h2 id="按交换技术分类">按交换技术分类</h2><ul><li><h3 id="电路交换">电路交换</h3><ul><li><h4 id="三个阶段">三个阶段</h4><ul><li>建立连接</li><li>传输数据</li><li>断开连接</li></ul></li><li><h4 id="会建立起专门的通路，会一直占用资源。直到断开连接">会建立起专门的通路，会一直占用资源。直到断开连接</h4></li><li><h4 id="具体的应用：传统电话网络">具体的应用：传统电话网络</h4></li></ul></li><li><h3 id="报文交换">报文交换</h3></li><li><h3 id="分组交换">分组交换</h3></li></ul><h4 id="后面两种主要使用了存储-转发机制"><strong>后面两种主要使用了存储-转发机制</strong></h4><h2 id="按拓扑结构分类">按拓扑结构分类</h2><ul><li><h3 id="总线型">总线型</h3></li><li><h3 id="星型">星型</h3></li><li><h3 id="环形">环形</h3></li><li><h3 id="网状-广域网中常用的拓扑结构">网状:广域网中常用的拓扑结构</h3></li></ul><h4 id="拓扑结构中的节点可以是指端系统和路由器、交换机"><strong>拓扑结构中的节点可以是指端系统和路由器、交换机</strong></h4><h2 id="按传输技术分类">按传输技术分类</h2><ul><li><h3 id="广播式网络">广播式网络</h3><h4 id="共享公共通信信道-内容大家都可以听到，通过目的地址来确定是否要接收"><strong>共享公共通信信道,内容大家都可以听到，通过目的地址来确定是否要接收</strong></h4><h4 id="无线、卫星通信、局域网都采用广播式网络">无线、卫星通信、局域网都采用广播式网络</h4></li><li><h3 id="点对点式网络">点对点式网络</h3><ul><li><h4 id="如果没有直接连接线路，那么就要存储转发，走一遍网络">如果没有直接连接线路，那么就要存储转发，走一遍网络</h4></li><li><h4 id="广域网基本是点对点网络">广域网基本是点对点网络</h4></li></ul></li></ul><h5 id="是否采用分组转发是点对点和广播式网络的重要区别"><strong>是否采用分组转发是点对点和广播式网络的重要区别</strong></h5><h2 id="总结">总结</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210703001427.png" alt="image-20210703001426947"></p><h1>3.标准化及相关组织</h1><h4 id="要实现不同厂商的软硬件的互通必须遵循统一的标准">要实现不同厂商的软硬件的互通必须遵循统一的标准</h4><h2 id="标准的分类">标准的分类</h2><ul><li><h3 id="法定标准-由权威机构制定比如说OSI">法定标准:由权威机构制定比如说OSI</h3></li><li><h3 id="事实标准-某公司的某产品是主流，那么该产品所TCP-IP">事实标准:某公司的某产品是主流，那么该产品所TCP/IP</h3></li></ul><h3 id="因特网标准都是RFC-请求评论-但是RFC不是所有的都是因特网标准">因特网标准都是RFC(请求评论)但是RFC不是所有的都是因特网标准</h3><h2 id="RFC上升为标准的三个阶段">RFC上升为标准的三个阶段</h2><ul><li><h4 id="因特网草案">因特网草案</h4></li><li><h4 id="草案标准">草案标准</h4></li><li><h4 id="因特网标准">因特网标准</h4></li></ul><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210703093617.png" alt="image-20210703093609892"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210703093706.png" alt="image-20210703093706775"></p><h1>4.性能指标</h1><ul><li><h3 id="速率：数据传输率或者比特率">速率：数据传输率或者比特率</h3><p>在信道上传输比特位的速度，一秒钟传输了多少比特，常见的有b/s、kb/s、mb/s</p><p>速度上单位的换算是10^3,储存容量的换算是2^10</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210703094757.png" alt="image-20210703094757843"></p></li><li><h3 id="带宽：">带宽：</h3><ul><li><h4 id="原意：某个信号具有的频带宽度，即最高频率和最低频率只差，单位是赫兹-Hz">原意：某个信号具有的频带宽度，即最高频率和最低频率只差，单位是赫兹(Hz)</h4></li><li><h4 id="计算机网络：一秒钟向链路传输的比特位数，即网络设备最高的速度">计算机网络：一秒钟向链路传输的比特位数，即网络设备最高的速度</h4></li></ul><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210703100252.png" alt="image-20210703100252583"></p></li></ul><p><strong>速率的最大值即是带宽</strong></p><h2 id="吞吐量">吞吐量</h2><p><strong>主机之间实际的传输速率</strong></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210703102442.png" alt="image-20210703102442740"></p><h2 id="时延">时延</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210703105348.png" alt="image-20210703105348429"></p><h3 id="排队时延">排队时延</h3><ul><li>入路由器排队时间</li><li>排队出路由器的时间</li></ul><h3 id="接收时延">接收时延</h3><h4 id="接收时延隐藏在传播时延和发送时延的过程中">接收时延隐藏在传播时延和发送时延的过程中</h4><p><strong>解释</strong>：</p><p>假设发送一个比特和接收一个比特的时间是一致的，且时间间隔是n秒，一个比特到接收端的时候，第二个还差n秒，第三个差2n秒依此类推。当后一个到达接收端的时候，前一个被接收。从第一个被接收到最后一个被接收时间刚好是发送时延，所以无需在算接收时延</p><h4 id="做题时一般可以忽略排队时延和处理时延-除非题目有特别说明">做题时一般可以忽略排队时延和处理时延(除非题目有特别说明)</h4><h2 id="时延带宽积">时延带宽积</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210703113753.png" alt=""></p><p><strong>是指当一个比特到了接收端的时刻链路中有多少个比特</strong></p><h2 id="往返时延RTT">往返时延RTT</h2><p><img src="C:%5CUsers%5CAIX%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210703114216608.png" alt="image-20210703114216608"></p><p><strong>解释</strong></p><p>发送方发送数据的开始是指：发送第一个比特到信道上的时刻</p><p>结束于：发送方收到接收方对第一个比特的确认为止。</p><p><strong>RTT=结束-开始</strong></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210703115004.png" alt="image-20210703115004221"></p><h4 id="末端处理时间：接收方对于确认帧的制作和发送等">末端处理时间：接收方对于确认帧的制作和发送等</h4><h4 id="发送时延可以忽略不计因为只需要第一个比特被收到即可">发送时延可以忽略不计因为只需要第一个比特被收到即可</h4><h2 id="利用率">利用率</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210703115649.png" alt=""></p><p><strong>解释</strong></p><p>当利用率越高时时延就越高：可以联系生活实际堵车。利用率越高说明信道上的数据就越多，那么排队时延就会无限增大，总时延就会无限增大</p><h2 id="性能指标">性能指标</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210703120739.png" alt="image-20210703120739106"></p><h1>5.分层结构、协议、接口、服务</h1><h2 id="计算机发送文件前需要完成的工作">计算机发送文件前需要完成的工作:</h2><ul><li><h4 id="激活通信链路">激活通信链路</h4></li><li><h4 id="告诉网络如何识别目的主机">告诉网络如何识别目的主机</h4></li><li><h4 id="查明目的主机是否开机，和连接上网络">查明目的主机是否开机，和连接上网络</h4></li><li><h4 id="当前计算机查明目的主机是否做好准备工作">当前计算机查明目的主机是否做好准备工作</h4></li><li><h4 id="确保意外和差错可以解决">确保意外和差错可以解决</h4></li></ul><p><strong>由以上我们可以知道一次性解决全部问题是不合理的，所以需要分层，将大问题化为小问题</strong></p><p><strong>每个层次都有专门负责的任务，提高效率</strong></p><h2 id="名词解释">名词解释</h2><ul><li><h4 id="实体-每一层的活动元素，同一层的实体是对等实体">实体:每一层的活动元素，同一层的实体是对等实体</h4></li><li><h4 id="协议：同一层，即对等实体之间才有协议，专门为对等实体数据交换而建立的">协议：同一层，即对等实体之间才有协议，专门为对等实体数据交换而建立的</h4></li><li><h4 id="接口：不同层次的交界处，计算机网络中的接口是逻辑接口。上层使用下层服务的入口。">接口：不同层次的交界处，计算机网络中的接口是逻辑接口。上层使用下层服务的入口。</h4></li><li><h4 id="服务-SAP-：每两个层次之间提供的东西，-下层为上层服务-上层需要什么服务，下层就提供什么服务-同时可以使用下面层次所有服务的总和n层可以使用1到n-1层的服务">服务(SAP)：每两个层次之间提供的东西， 下层为上层服务(上层需要什么服务，下层就提供什么服务)同时可以使用下面层次所有服务的总和n层可以使用1到n-1层的服务</h4></li></ul><p><img src="C:%5CUsers%5CAIX%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210705144155308.png" alt="image-20210705144155308"></p><h2 id="协议三要素">协议三要素</h2><ul><li><h4 id="语法-一串数据有几部分组成，从哪里到哪里是发送的数据，发送的数据进行如何分段，每段的起始和结束位置是哪里，这都是语法规定的。">语法:一串数据有几部分组成，从哪里到哪里是发送的数据，发送的数据进行如何分段，每段的起始和结束位置是哪里，这都是语法规定的。</h4></li><li><h4 id="语义-规定每一段的功能和意义。">语义:规定每一段的功能和意义。</h4></li><li><h4 id="同步-规定各种操作的顺序。">同步:规定各种操作的顺序。</h4></li></ul><h2 id="层次的数据单元">层次的数据单元</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210705163730.png" alt="image-20210705163730363"></p><h4 id="SDU服务数据单元：最初发送的数据-有效数据">SDU服务数据单元：最初发送的数据(有效数据)</h4><h4 id="PCI协议控制信息：协议对应部分的数据">PCI协议控制信息：协议对应部分的数据</h4><h4 id="PDU协议数据单元：对等层次传送的数据-或者是不同层次之间传送的数据单元">PDU协议数据单元：对等层次传送的数据(或者是不同层次之间传送的数据单元)</h4><h4 id="PCI-SDU-PDU：上层的PDU-相当于本层的SDU-本层的PCI-本层的PDU-依此类推">PCI+SDU=PDU：上层的PDU(相当于本层的SDU)+本层的PCI=本层的PDU,依此类推</h4><h4 id="每个层次都有PDU-SDU-PCI">每个层次都有PDU SDU PCI</h4><h2 id="概念总结">概念总结</h2><h4 id="网络体系结构是从功能上描述计算机网络结构的，即规定了每层对应的功能">网络体系结构是从功能上描述计算机网络结构的，即规定了每层对应的功能</h4><h4 id="每层的协议规定了本层次索要完成的功能">每层的协议规定了本层次索要完成的功能</h4><h4 id="计算机网络体系结构包括">计算机网络体系结构包括</h4><ul><li><h5 id="各个层次和对应层次的集合">各个层次和对应层次的集合</h5></li></ul><h4 id="相邻两层才能说下层为上层提供服务">相邻两层才能说下层为上层提供服务</h4><h4 id="相邻层才有接口，且下层提供的服务对上层完全屏蔽">相邻层才有接口，且下层提供的服务对上层完全屏蔽</h4><h4 id="体系结构是抽象的，而实现是指能运行的一些软件和硬件">体系结构是抽象的，而实现是指能运行的一些软件和硬件</h4><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210705170536.png" alt="image-20210705170536327"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210705170459.png" alt="image-20210705170459539"></p><h1>6.OSI参考模型</h1><h2 id="计算机网络的分层结构">计算机网络的分层结构</h2><ul><li><h4 id="OSI7层模型（法定标准">OSI7层模型（法定标准)</h4></li><li><h4 id="TCP-IP4层模型-市场标准">TCP/IP4层模型(市场标准)</h4></li></ul><h4 id="OSI诞生的原因：统一规则，使得不同网络体系的计算机互联互通。">OSI诞生的原因：统一规则，使得不同网络体系的计算机互联互通。</h4><h3 id="结果：理论很成功，现实中很失败。但是具有非常高的借鉴价值和学习意义">结果：理论很成功，现实中很失败。但是具有非常高的借鉴价值和学习意义</h3><h2 id="TCP-IP现行网络体系">TCP/IP现行网络体系</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210705180713.png" alt="image-20210705175333708"></p><h2 id="OSI模型通信过程">OSI模型通信过程</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210705180707.png" alt="image-20210705180707200"></p><h4 id="中间系统-只有通信子网：下3层">中间系统(只有通信子网：下3层)</h4><ul><li>路由器</li><li>交换机</li><li>网桥等</li></ul><h4 id="端到端：不需要经过中间系统处理的层次-上四层">端到端：不需要经过中间系统处理的层次(上四层)</h4><h4 id="点到点：需要经过中间系统的处理">点到点：需要经过中间系统的处理</h4><h2 id=""></h2><h2 id="源主机–-中间系统所进行的操作-进行数据拆分，为了确定目的主机的发送路径-确定下一跳的路径">源主机–&gt;中间系统所进行的操作:进行数据拆分，为了确定目的主机的发送路径(确定下一跳的路径)</h2><h2 id="中间系统–-下一个几点所进行的操作-数据还原，怎么拆分的就怎么装回去">中间系统–&gt;下一个几点所进行的操作:数据还原，怎么拆分的就怎么装回去</h2><h2 id="通信的完成过程-可类比送快递和收快递">通信的完成过程(可类比送快递和收快递)</h2><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210705202217.png" alt="image-20210705182311633"></p><h2 id="各个层次对应的功能和协议">各个层次对应的功能和协议</h2><h3 id="应用层：需要联网使用的程序">应用层：需要联网使用的程序</h3><h3 id="典型应用层服务">典型应用层服务</h3><ul><li><h4 id="文件传输-FTP">文件传输(FTP)</h4></li><li><h4 id="电子邮件-SMTP">电子邮件(SMTP)</h4></li><li><h4 id="万维网-HTTP">万维网(HTTP)</h4></li></ul><h2 id="-2"></h2><h3 id="表示层-决定信息在系统中如何表示，显示在屏幕上的内容是什么-语法和语义">表示层:决定信息在系统中如何表示，显示在屏幕上的内容是什么(语法和语义)</h3><h3 id="功能">功能</h3><ul><li><h4 id="数据格式的变换-翻译官-比如对比特流和文字之间的转换">数据格式的变换(翻译官):比如对比特流和文字之间的转换</h4></li><li><h4 id="数据加密和解密：比如说密码">数据加密和解密：比如说密码</h4></li><li><h4 id="数据的压缩和恢复-比如说传输大文件的时候">数据的压缩和恢复:比如说传输大文件的时候</h4></li></ul><h3 id="会话层：建立进程间的通信和有序的传输数据-进程间建立连接也称为一个会话，会话互相独立">会话层：建立进程间的通信和有序的传输数据(进程间建立连接也称为一个会话，会话互相独立)</h3><h3 id="功能-2">功能</h3><ul><li><h4 id="建立、管理、终止会话">建立、管理、终止会话</h4></li><li><h4 id="使用校验点使得当通信失效时从校验点-同步点-恢复通信">使用校验点使得当通信失效时从校验点(同步点)恢复通信</h4><ul><li>一个很长的数据是会被切开发送的，然后再插入校验点。当网络失效重传时就会重传离校验点的最近的部分。比如说一本小说一章对应一个校验点，在传第四章传到99%出现问题，那么就会重传第四章。</li></ul></li></ul><h3 id="传输层-负责进程间的通信即端到端通信，传输单位是用户数据报或报文段">传输层:负责进程间的通信即端到端通信，传输单位是用户数据报或报文段</h3><p><strong>一个进程对应一个端口号</strong></p><h3 id="功能-3">功能</h3><ul><li><h4 id="可靠传输、不可靠传输">可靠传输、不可靠传输</h4><ul><li><h5 id="可靠传输-一般用于重要信息和大数据量，需要先建立连接）：没有收到报文段的确认帧的话，一直重传。直到收到报文段的确认帧为止，开启下一个报文段。">可靠传输(一般用于重要信息和大数据量，需要先建立连接）：没有收到报文段的确认帧的话，一直重传。直到收到报文段的确认帧为止，开启下一个报文段。</h5></li><li><h5 id="不可靠传输-用于数据量小，且损失一点影响很小的数据-：不需要先建立连接和没有重传机制。发就完事了。">不可靠传输(用于数据量小，且损失一点影响很小的数据)：不需要先建立连接和没有重传机制。发就完事了。</h5></li></ul></li><li><h4 id="差错控制">差错控制</h4><ul><li>对数据的顺序错误及数据丢失进行修正</li></ul></li><li><h4 id="流量控制">流量控制</h4><ul><li>协调发送方和接收方的速度(如果发送方的速度大于接收方的速度就会调节发送方的速度)</li></ul></li><li><h4 id="复用分用">复用分用</h4><ul><li><h5 id="复用：多个进程可以同时使用下面运输层的服务">复用：多个进程可以同时使用下面运输层的服务</h5></li><li><h5 id="分用-运输层可以将收到的信息分布交付给应用层中相应的进程">分用:运输层可以将收到的信息分布交付给应用层中相应的进程</h5></li></ul><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210705210732.png" alt="image-20210705210732331"></p></li></ul><p><strong>注释</strong></p><p><strong>复用</strong>：微信和QQ可以同时发送信息，形成报文段，用端口号加以区分</p><p><strong>分用</strong>：同时接收到很多报文段，依据端口号分布交付信息给相应进程</p><h4 id="主要协议：">主要协议：</h4><ul><li><h5 id="tcp">tcp</h5></li><li><h5 id="udp">udp</h5></li></ul><h3 id="网络层-IP层">网络层(IP层)</h3><h4 id="功能：把分组从源端传到目的端，为分组交换网上的不同主机提供通信服务，传输单位是数据报">功能：把分组从源端传到目的端，为分组交换网上的不同主机提供通信服务，传输单位是数据报</h4><h4 id="数据报和分组的关系-数据报过长，切割成多个分组">数据报和分组的关系:数据报过长，切割成多个分组</h4><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210705211942.png" alt="image-20210705211942390"></p><h3 id="数据链路层-将网络层的数据报封装成帧，传输单位是帧">数据链路层:将网络层的数据报封装成帧，传输单位是帧</h3><h3 id="功能-4">功能</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210705212546.png" alt="image-20210705212546653"></p><h4 id="功能四：访问-接入）控制对公共信道的访问">功能四：访问(接入）控制对公共信道的访问</h4><h4 id="尤其是广播式网络，某个时刻只能一个占用信道">(尤其是广播式网络，某个时刻只能一个占用信道)</h4><h3 id="物理层-将数据变为电信号或光信号在链路上传输">物理层:将数据变为电信号或光信号在链路上传输</h3><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210705213228.png" alt="image-20210705213228259"></p><p><strong>注释</strong></p><p>物理媒体：传输介质(光纤、同轴电缆)</p><h3 id="功能-5">功能</h3><ul><li><h4 id="定义接口特性-确定连接的物理设备的引脚信息-有几个引脚-等">定义接口特性:确定连接的物理设备的引脚信息(有几个引脚)等</h4></li><li><h4 id="定义传输模型">定义传输模型</h4><ul><li><h5 id="单工-只支持数据在一个方向上传输；在同一时间只有一方能接受或发送信息，不能实现双向通信，举例：电视，广播。">单工:只支持数据在一个方向上传输；在同一时间只有一方能接受或发送信息，不能实现双向通信，举例：电视，广播。</h5></li><li><h5 id="半双工-允许数据在两个方向上传输-但是-在某一时刻-只允许数据在一个方向上传输-它实际上是一种切换方向的单工通信；在同一时间只可以有一方接受或发送信息，可以实现双向通信。举例：对讲机。">半双工:允许数据在两个方向上传输,但是,在某一时刻,只允许数据在一个方向上传输,它实际上是一种切换方向的单工通信；在同一时间只可以有一方接受或发送信息，可以实现双向通信。举例：对讲机。</h5></li><li><h5 id="全双工-允许数据同时在两个方向上传输-因此-全双工通信是两个单工通信方式的结合-它要求发送设备和接收设备都有独立的接收和发送能力；在同一时间可以同时接受和发送信息，实现双向通信，举例：电话通信。">全双工:允许数据同时在两个方向上传输,因此,全双工通信是两个单工通信方式的结合,它要求发送设备和接收设备都有独立的接收和发送能力；在同一时间可以同时接受和发送信息，实现双向通信，举例：电话通信。</h5></li></ul></li><li><h4 id="定义传输速率-网速">定义传输速率:网速</h4></li><li><h4 id="比特同步-确保正确接收比特信息，比如说接收一个比特需要多少时间（比特周期">比特同步:确保正确接收比特信息，比如说接收一个比特需要多少时间（比特周期)</h4></li><li><h4 id="比特编码">比特编码</h4></li></ul><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210705215224.png" alt="image-20210705215224492"></p><h1>7.TCP/IP参考模型</h1><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210705215505.png" alt="image-20210705215505535"></p><p><strong>注解</strong></p><p>先诞生TCP/IP后面才是OSI</p><p>现有TCP/IP协议栈后面给它分层，就成了TCP/IP参考模型</p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210705220133.png" alt="image-20210705220133064"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210705220622.png" alt="image-20210705220622554"></p><p><img src="https://cdn.jsdelivr.net/gh/AIXDL/imgcloud/img/20210705220818.png" alt="image-20210705220818643"></p><h1>8.总结</h1><p><img src="C:%5CUsers%5CAIX%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210705221436584.png" alt="image-20210705221436584"></p>]]></content>
      
      
      <categories>
          
          <category> 王道计算机网络 </category>
          
          <category> 第一章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 王道计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Front-matter</title>
      <link href="/2021/06/17/Front-matter/"/>
      <url>/2021/06/17/Front-matter/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>Front-matter</h1><p><strong>Page Front-matter</strong></p><table><thead><tr><th style="text-align:center">写法</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center">title</td><td style="text-align:center">【必需】页面标题</td></tr><tr><td style="text-align:center">date</td><td style="text-align:center">【必需】页面创建日期</td></tr><tr><td style="text-align:center">type</td><td style="text-align:center">【必需】标籤、分类和友情链接三个页面需要配置</td></tr><tr><td style="text-align:center">updated</td><td style="text-align:center">【可选】页面更新日期</td></tr><tr><td style="text-align:center">description</td><td style="text-align:center">【可选】页面描述</td></tr><tr><td style="text-align:center">keywords</td><td style="text-align:center">【可选】页面关键字</td></tr><tr><td style="text-align:center">comments</td><td style="text-align:center">【可选】显示页面评论模块(默认 true)</td></tr><tr><td style="text-align:center">top_img</td><td style="text-align:center">【可选】页面顶部图片</td></tr><tr><td style="text-align:center">mathjax</td><td style="text-align:center">【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td style="text-align:center">katex</td><td style="text-align:center">【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td style="text-align:center">aside</td><td style="text-align:center">【可选】显示侧边栏 (默认 true)</td></tr><tr><td style="text-align:center">aplayer</td><td style="text-align:center">【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td style="text-align:center">highlight_shrink</td><td style="text-align:center">【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td></tr></tbody></table><p><strong>Post Front-matter</strong></p><table><thead><tr><th>写法</th><th style="text-align:left">解释</th></tr></thead><tbody><tr><td>title</td><td style="text-align:left">【必需】文章标题</td></tr><tr><td>date</td><td style="text-align:left">【必需】文章创建日期</td></tr><tr><td>updated</td><td style="text-align:left">【可选】文章更新日期</td></tr><tr><td>tags</td><td style="text-align:left">【可选】文章标籤</td></tr><tr><td>categories</td><td style="text-align:left">【可选】文章分类</td></tr><tr><td>keywords</td><td style="text-align:left">【可选】文章关键字</td></tr><tr><td>description</td><td style="text-align:left">【可选】文章描述</td></tr><tr><td>top_img</td><td style="text-align:left">【可选】文章顶部图片</td></tr><tr><td>cover</td><td style="text-align:left">【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false/图片地址/留空)</td></tr><tr><td>comments</td><td style="text-align:left">【可选】显示文章评论模块(默认 true)</td></tr><tr><td>toc</td><td style="text-align:left">【可选】显示文章TOC(默认为设置中toc的enable配置)</td></tr><tr><td>toc_number</td><td style="text-align:left">【可选】显示toc_number(默认为设置中toc的number配置)</td></tr><tr><td>copyright</td><td style="text-align:left">【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</td></tr><tr><td>copyright_author</td><td style="text-align:left">【可选】文章版权模块的文章作者</td></tr><tr><td>copyright_author_href</td><td style="text-align:left">【可选】文章版权模块的文章作者链接</td></tr><tr><td>copyright_url</td><td style="text-align:left">【可选】文章版权模块的文章连结链接</td></tr><tr><td>copyright_info</td><td style="text-align:left">【可选】文章版权模块的版权声明文字</td></tr><tr><td>mathjax</td><td style="text-align:left">【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td style="text-align:left">【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>aplayer</td><td style="text-align:left">【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td>highlight_shrink</td><td style="text-align:left">【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td></tr><tr><td>aside</td><td style="text-align:left">【可选】显示侧边栏 (默认 true)</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Front-matter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络</title>
      <link href="/2021/06/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
      <url>/2021/06/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>到时候再写吧，只是随便测试一下</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/06/13/hello-world/"/>
      <url>/2021/06/13/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
